-- COMMON_USER.ANOMALIES_M definition

CREATE TABLE "COMMON_USER"."ANOMALIES_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "MODULE_ID" VARCHAR(15 OCTETS) NOT NULL ,
		  "ANOMALIES" VARCHAR(50 OCTETS) NOT NULL ,
		  "CODE" VARCHAR(20 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(15 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(50 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;
ALTER TABLE "COMMON_USER"."ANOMALIES_M"
	ADD CONSTRAINT "PK_ANOMALIES_M_ID" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."ANOMALIES_M" FOR TABLE "COMMON_USER"."ANOMALIES_M" ;
CREATE ALIAS "DABS    "."ANOMALIES_M" FOR TABLE "COMMON_USER"."ANOMALIES_M" ;

GRANT SELECT ON TABLE "COMMON_USER"."ANOMALIES_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."ANOMALIES_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."ANOMALIES_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."ANOMALIES_M" TO USER "DB2INST1"  ;


-- COMMON_USER.BANKBRANCHES definition

CREATE TABLE "COMMON_USER"."BANKBRANCHES"  (
		  "ID" VARCHAR(10 OCTETS) NOT NULL ,
		  "BANK_NAME" VARCHAR(50 OCTETS) ,
		  "CREATED_BY" VARCHAR(15 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(100 OCTETS) NOT NULL ,
		  "BRANCH_NAME" VARCHAR(50 OCTETS) ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(10 OCTETS) ,
		  "FLAG5" VARCHAR(250 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) ,
		  "OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "OPERATOR" VARCHAR(20 OCTETS) ,
		  "OPERATOR_CODE" VARCHAR(15 OCTETS) ,
		  "BRANCH_CODE" VARCHAR(5 OCTETS) ,
		  "PARENTOFFICE_ID" VARCHAR(10 OCTETS) ,
		  "ADDRESS" VARCHAR(2000 OCTETS) ,
		  "OPEN_TIME" VARCHAR(5 OCTETS) NOT NULL ,
		  "CLOSE_TIME" VARCHAR(5 OCTETS) NOT NULL ,
		  "NONWORKINGDAYS" VARCHAR(100 OCTETS) ,
		  "VERIFY" VARCHAR(20 OCTETS) ,
		  "PROVINCE" VARCHAR(5 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

CREATE INDEX "CENTRAL_ALL"."IDX_PARENT" ON "COMMON_USER"."BANKBRANCHES"
		("PARENTOFFICE_ID" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;

CREATE INDEX "COMMON_USER"."IX_BANKBRANCHES_PROVIENCE" ON "COMMON_USER"."BANKBRANCHES"
		("PROVINCE" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."BANKBRANCHES"
	ADD CONSTRAINT "BANKBRANCHES_PK" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."BANKBRANCHES"
	ADD CONSTRAINT "UK_BANKBRANCHES" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."BANKBRANCHES" FOR TABLE "COMMON_USER"."BANKBRANCHES" ;
CREATE VIEW DABS.BANKBRANCHES AS  SELECT *  FROM CENTRAL_ALL.BANKBRANCHES
WHERE PROVINCE IS NULL ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_BANKBRANCHES"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."BANKBRANCHES"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

        IF (NEW.RECORD_STATUS='ACTIVE') THEN

                SET NEW.CHECK_CONDITION = NEW.BANK_NAME||','||NEW.BRANCH_CODE;--

        ELSE

                SET NEW.CHECK_CONDITION = NEW.ID;--

        END IF;--

END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_BANKBRANCHES"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."BANKBRANCHES"
  REFERENCING
              OLD AS "OLD"
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

        DECLARE CNT INTEGER;--

        IF (NEW.RECORD_STATUS='ACTIVE') THEN

                SET NEW.CHECK_CONDITION = NEW.BANK_NAME||','||NEW.BRANCH_CODE;--

        ELSE

                SET NEW.CHECK_CONDITION = NEW.ID;--

        END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."BANKBRANCHES" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."BANKBRANCHES" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."BANKBRANCHES" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."BANKBRANCHES" TO USER "DB2INST1"  ;


-- COMMON_USER.BANK_MASTER definition

CREATE TABLE "COMMON_USER"."BANK_MASTER"  (
		  "ID" VARCHAR(10 OCTETS) NOT NULL ,
		  "BANK_NAME" VARCHAR(50 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(15 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "CHECK_CONDITION" VARCHAR(200 OCTETS) NOT NULL ,
		  "SHORT_NAME" VARCHAR(10 OCTETS) ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) ,
		  "OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "OPERATOR" VARCHAR(20 OCTETS) ,
		  "OPERATOR_CODE" VARCHAR(15 OCTETS) ,
		  "BANK_CODE" VARCHAR(3 OCTETS) NOT NULL ,
		  "RECIPT_PRINT_TYPE" VARCHAR(50 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

CREATE INDEX "COMMON_USER"."IX1_BANK_MASTER" ON "COMMON_USER"."BANK_MASTER"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."BANK_MASTER"
	ADD CONSTRAINT "PK_BANK_MASTER" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."BANK_MASTER"
	ADD CONSTRAINT "UK_BANK_CODE" UNIQUE
		("BANK_CODE") ;

ALTER TABLE "COMMON_USER"."BANK_MASTER"
	ADD CONSTRAINT "UK_BANK_MASTER" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."BANK_MASTER" FOR TABLE "COMMON_USER"."BANK_MASTER" ;
CREATE ALIAS "DABS    "."BANK_MASTER" FOR TABLE "CENTRAL_ALL"."BANK_MASTER" ;
CREATE TRIGGER common_user.TRIG_BRIN_BANK_MASTER
  NO CASCADE BEFORE INSERT
  ON common_user.BANK_MASTER
  REFERENCING
    NEW AS NEW
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.BANK_NAME;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;
CREATE TRIGGER common_user.TRIG_BRUP_BANK_MASTER
  NO CASCADE BEFORE UPDATE
  ON common_user.BANK_MASTER
  REFERENCING
    OLD AS OLD
    NEW AS NEW
  FOR EACH ROW
  WHEN (NEW.RECORD_STATUS<>'ACTIVE')
BEGIN ATOMIC
DECLARE CNT INTEGER;--
SET CNT = (SELECT COUNT(*) FROM BANKBRANCHES WHERE PARENTOFFICE_ID = OLD.ID AND RECORD_STATUS='ACTIVE') ;--
IF (CNT>0) THEN
  SIGNAL SQLSTATE '80560' ('Child Record Exists ');--
END IF;--
END ;

GRANT SELECT ON TABLE "COMMON_USER"."BANK_MASTER" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."BANK_MASTER" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."BANK_MASTER" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."BANK_MASTER" TO USER "DB2INST1"  ;


-- COMMON_USER.CMTACTIVITIES_STATUS_CONFIG_M definition

CREATE TABLE "COMMON_USER"."CMTACTIVITIES_STATUS_CONFIG_M"  (
		  "ID" VARCHAR(255 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(255 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP ,
		  "UPDATE_DATE" TIMESTAMP ,
		  "CREATED_BY" VARCHAR(255 OCTETS) ,
		  "UPDATED_BY" VARCHAR(255 OCTETS) ,
		  "MONTH" INTEGER ,
		  "YEAR" INTEGER ,
		  "DB_IP_ADDRESS" VARCHAR(255 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(255 OCTETS) ,
		  "DESCRIPTION" VARCHAR(255 OCTETS) ,
		  "MODULE" VARCHAR(255 OCTETS) ,
		  "TYPE" VARCHAR(255 OCTETS) ,
		  "STATUS_CODE" VARCHAR(255 OCTETS) )
		 IN "USERSPACE1"
		 ORGANIZE BY ROW  ;

ALTER TABLE "COMMON_USER"."CMTACTIVITIES_STATUS_CONFIG_M" PCTFREE 0 ;
ALTER TABLE "COMMON_USER"."CMTACTIVITIES_STATUS_CONFIG_M"
	ADD PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."CMTACTIVITIES_STATUS_CONFIG_M" FOR TABLE "COMMON_USER"."CMTACTIVITIES_STATUS_CONFIG_M" ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTACTIVITIES_STATUS_CONFIG_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTACTIVITIES_STATUS_CONFIG_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTACTIVITIES_STATUS_CONFIG_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CMTACTIVITIES_STATUS_CONFIG_M" TO USER "DB2INST1"  ;


-- COMMON_USER.CMTBEHAVIOUR_CONFIG_M definition

CREATE TABLE "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "BEHAVIOUR_NAME" VARCHAR(35 OCTETS) ,
		  "BEHAVIOUR_CODE" VARCHAR(5 OCTETS) ,
		  "BEHAVIOUR_NUM" DECIMAL(3,0) ,
		  "REMARKS" VARCHAR(200 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(20 OCTETS) ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(35 OCTETS) NOT NULL ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "REQUEST_TYPE" VARCHAR(10 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

ALTER TABLE "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M" PCTFREE 0 ;

COMMENT ON COLUMN "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M"."BEHAVIOUR_CODE" IS 'Code of the Behaviour which is to be unique and specific for that behaviour' ;

COMMENT ON COLUMN "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M"."BEHAVIOUR_NAME" IS 'Name of the Behaviour' ;

COMMENT ON COLUMN "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M"."BEHAVIOUR_NUM" IS 'Behaviour Number' ;

COMMENT ON COLUMN "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M"."ID" IS 'Unique Id acts as primary key' ;

COMMENT ON COLUMN "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M"."REMARKS" IS 'Remarks for any description for that behaviour' ;
ALTER TABLE "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M"
	ADD CONSTRAINT "PK_CMTBEHAVIOUR_CONFIG_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M"
	ADD CONSTRAINT "UK_CMTBEHAVIOUR_CONFIG_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."CMTBEHAVIOUR_CONFIG_M" FOR TABLE "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M" ;
CREATE ALIAS "DABS    "."CMTBEHAVIOUR_CONFIG_M" FOR TABLE "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M" ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CMTBEHAVIOUR_CONFIG_M" TO USER "DB2INST1"  ;


-- COMMON_USER.CMTDESIG_M definition

CREATE TABLE "COMMON_USER"."CMTDESIG_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "NAME" VARCHAR(30 OCTETS) NOT NULL ,
		  "SHORT_NAME" VARCHAR(10 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(20 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECFLOAT(16) NOT NULL ,
		  "YEAR" DECFLOAT(16) NOT NULL ,
		  "FLAG1" VARCHAR(2 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(30 OCTETS) NOT NULL ,
		  "CHECK_CONDITION1" VARCHAR(30 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "LOAD" DECIMAL(10,2) ,
		  "UNIT" VARCHAR(15 OCTETS) ,
		  "MAXLOAD" DECIMAL(10,2) ,
		  "DEPT_ID" VARCHAR(20 OCTETS) ,
		  "INSTALMENT_LIMIT" DECIMAL(10,2) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

CREATE INDEX "COMMON_USER"."IX11_CMTDESIG_M" ON "COMMON_USER"."CMTDESIG_M"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;

CREATE INDEX "COMMON_USER"."IX12_CMTDESIG_M" ON "COMMON_USER"."CMTDESIG_M"
		("CHECK_CONDITION1" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."CMTDESIG_M"
	ADD CONSTRAINT "PK_CMTDESIG_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."CMTDESIG_M"
	ADD CONSTRAINT "UK_CMTDESIG_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."CMTDESIG_M" FOR TABLE "COMMON_USER"."CMTDESIG_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_CMTDESIG_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."CMTDESIG_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.NAME;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTDESIG_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTDESIG_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTDESIG_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CMTDESIG_M" TO USER "DB2INST1"  ;


-- COMMON_USER.CMTGOVT_CODE_M definition

CREATE TABLE "COMMON_USER"."CMTGOVT_CODE_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "GOVT_CODE" VARCHAR(100 OCTETS) ,
		  "ORG_NAME" VARCHAR(100 OCTETS) ,
		  "PARENT_ID" VARCHAR(20 OCTETS) ,
		  "LEVELNO" DECIMAL(2,0) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(15 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "MONTH" DECFLOAT(16) ,
		  "YEAR" DECFLOAT(16) ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(15 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(30 OCTETS) ,
		  "GOVT_TYPE" VARCHAR(100 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."CMTGOVT_CODE_M"."ID" IS 'Unique Id acts as primary key' ;

CREATE INDEX "COMMON_USER"."IX13_CMTGOVT_CODE_" ON "COMMON_USER"."CMTGOVT_CODE_M"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."CMTGOVT_CODE_M"
	ADD CONSTRAINT "PK_CMTGOVT_CODE_M" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."CMTGOVT_CODE_M" FOR TABLE "COMMON_USER"."CMTGOVT_CODE_M" ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTGOVT_CODE_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTGOVT_CODE_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTGOVT_CODE_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CMTGOVT_CODE_M" TO USER "DB2INST1"  ;


-- COMMON_USER.CMTLOGINFAILUREHISTORY definition

CREATE TABLE "COMMON_USER"."CMTLOGINFAILUREHISTORY"  (
		  "ID" VARCHAR(15 OCTETS) NOT NULL ,
		  "USERID" VARCHAR(15 OCTETS) ,
		  "LOGIN_IPADD" VARCHAR(50 OCTETS) ,
		  "LOGIN_TIME" TIMESTAMP ,
		  "LOGOUT_TIME" TIMESTAMP ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "SESSION_END_BY" VARCHAR(20 OCTETS) ,
		  "MAC_ADDRESS" VARCHAR(30 OCTETS) ,
		  "LOGIN_ID" VARCHAR(30 OCTETS) ,
		  "PASSWORD" VARCHAR(50 OCTETS) )
		 IN "USERSPACE1"
		 ORGANIZE BY ROW  ;
CREATE ALIAS "CENTRAL_ALL"."CMTLOGINFAILUREHISTORY" FOR TABLE "COMMON_USER"."CMTLOGINFAILUREHISTORY" ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTLOGINFAILUREHISTORY" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTLOGINFAILUREHISTORY" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTLOGINFAILUREHISTORY" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CMTLOGINFAILUREHISTORY" TO USER "DB2INST1"  ;


-- COMMON_USER.CMTLOGINHISTORY definition

CREATE TABLE "COMMON_USER"."CMTLOGINHISTORY"  (
		  "ID" VARCHAR(15 OCTETS) NOT NULL ,
		  "USERID" VARCHAR(15 OCTETS) ,
		  "LOGIN_IPADD" VARCHAR(50 OCTETS) ,
		  "LOGIN_TIME" TIMESTAMP(0) ,
		  "LOGOUT_TIME" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "SESSION_END_BY" VARCHAR(20 OCTETS) ,
		  "MAC_ADDRESS" VARCHAR(30 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

CREATE INDEX "COMMON_USER"."LOG_HIST_TMEIDX" ON "COMMON_USER"."CMTLOGINHISTORY"
		("LOGIN_TIME" DESC)
		PCTFREE 10 MINPCTUSED 10

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;

CREATE INDEX "COMMON_USER"."LOG_HIST_USRIDX" ON "COMMON_USER"."CMTLOGINHISTORY"
		("USERID" DESC)
		PCTFREE 10 MINPCTUSED 10

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."CMTLOGINHISTORY"
	ADD CONSTRAINT "CMTLOGINHISTORY_PK" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."CMTLOGINHISTORY" FOR TABLE "COMMON_USER"."CMTLOGINHISTORY" ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTLOGINHISTORY" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTLOGINHISTORY" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTLOGINHISTORY" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CMTLOGINHISTORY" TO USER "DB2INST1"  ;


-- COMMON_USER.CMTOFFICETYPE_M definition

CREATE TABLE "COMMON_USER"."CMTOFFICETYPE_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "TYPE" VARCHAR(30 OCTETS) NOT NULL ,
		  "PARENTTYPE_ID" VARCHAR(35 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(20 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECFLOAT(16) NOT NULL ,
		  "YEAR" DECFLOAT(16) NOT NULL ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(35 OCTETS) NOT NULL ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "NAME" VARCHAR(30 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

ALTER TABLE "COMMON_USER"."CMTOFFICETYPE_M" PCTFREE 0 ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICETYPE_M"."ID" IS 'Unique Id acts as primary key' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICETYPE_M"."PARENTTYPE_ID" IS 'Contains Parent Office type ID' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICETYPE_M"."TYPE" IS 'Contains office type' ;
ALTER TABLE "COMMON_USER"."CMTOFFICETYPE_M"
	ADD CONSTRAINT "PK_CMTOFFICETYPE_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."CMTOFFICETYPE_M"
	ADD CONSTRAINT "UK_CMTOFFICETYPE_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."CMTOFFICETYPE_M" FOR TABLE "COMMON_USER"."CMTOFFICETYPE_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_CMTOFFICETYPE_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."CMTOFFICETYPE_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN
		SET NEW.CHECK_CONDITION = NEW.TYPE;--
	ELSE
		SET NEW.CHECK_CONDITION = NEW.ID;--
	END IF;--
END ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTOFFICETYPE_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTOFFICETYPE_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTOFFICETYPE_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CMTOFFICETYPE_M" TO USER "DB2INST1"  ;


-- COMMON_USER.CMTOFFICE_M definition

CREATE TABLE "COMMON_USER"."CMTOFFICE_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "CODE" VARCHAR(10 OCTETS) NOT NULL ,
		  "NAME" VARCHAR(70 OCTETS) NOT NULL ,
		  "OFFICETYPE_ID" VARCHAR(20 OCTETS) NOT NULL ,
		  "PARENTOFFICE_ID" VARCHAR(20 OCTETS) NOT NULL ,
		  "EROOFFICE_ID" VARCHAR(20 OCTETS) ,
		  "RESPONSIBLEPERSON_ID" VARCHAR(20 OCTETS) NOT NULL ,
		  "DOOR_NO" VARCHAR(20 OCTETS) ,
		  "AREA" VARCHAR(30 OCTETS) ,
		  "STREET" VARCHAR(30 OCTETS) ,
		  "CITY" VARCHAR(30 OCTETS) ,
		  "PHONE1" VARCHAR(20 OCTETS) ,
		  "PHONE2" VARCHAR(20 OCTETS) ,
		  "PHONE3" VARCHAR(20 OCTETS) ,
		  "FAX" VARCHAR(20 OCTETS) ,
		  "EMAIL" VARCHAR(30 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "CREATED_BY" VARCHAR(20 OCTETS) NOT NULL ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECFLOAT(16) NOT NULL ,
		  "YEAR" DECFLOAT(16) NOT NULL ,
		  "FLAG1" VARCHAR(5 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(50 OCTETS) NOT NULL ,
		  "CHECK_CONDITION1" VARCHAR(70 OCTETS) ,
		  "TIMING_FRHR" DECIMAL(2,0) ,
		  "TIMING_FRMI" DECIMAL(2,0) ,
		  "TIMING_TOHR" DECIMAL(2,0) ,
		  "TIMING_TOMI" DECIMAL(2,0) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "UCODE" VARCHAR(4 OCTETS) NOT NULL ,
		  "IS_NETWORKED" VARCHAR(1 OCTETS) ,
		  "AUTHENTICATION_NUMBER" DECIMAL(22,0) ,
		  "OLD_UCODE" VARCHAR(4 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

ALTER TABLE "COMMON_USER"."CMTOFFICE_M" PCTFREE 0 ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."AREA" IS 'Contains Area of the office' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."AUTHENTICATION_NUMBER" IS 'Contains Authentication number' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."CITY" IS 'Contains in which city office is located' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."CODE" IS 'Contains The Office Code' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."DOOR_NO" IS 'Contains Door no of the office' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."EMAIL" IS 'Email ID' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."EROOFFICE_ID" IS 'Contains ERO office ID' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."FAX" IS 'FAX number' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."ID" IS 'Unique Id acts as primary key' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."IS_NETWORKED" IS 'Is connected to physical network or not' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."NAME" IS 'Contains name of the office' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."OFFICETYPE_ID" IS 'Contains office type ID' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."PARENTOFFICE_ID" IS 'Contains Parent ID of the office' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."PHONE1" IS 'Phone number' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."PHONE2" IS 'Phone number' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."PHONE3" IS 'Phone number' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."RESPONSIBLEPERSON_ID" IS 'Contains Responsible person id of the office' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."STREET" IS 'Contains Street of the office' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."TIMING_FRHR" IS 'Timing From Hour' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."TIMING_FRMI" IS 'Timing From Minutes' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."TIMING_TOHR" IS 'Timing To Hour' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."TIMING_TOMI" IS 'Timing To Minutes' ;

COMMENT ON COLUMN "COMMON_USER"."CMTOFFICE_M"."UCODE" IS 'Contains unique code of the office' ;

CREATE INDEX "COMMON_USER"."IDX_CMTOFFICE_M_PARENT" ON "COMMON_USER"."CMTOFFICE_M"
		("PARENTOFFICE_ID" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."CMTOFFICE_M"
	ADD CONSTRAINT "PK_CMTOFFICE_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."CMTOFFICE_M"
	ADD CONSTRAINT "UK_CMTOFFICE_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."CMTOFFICE_M" FOR TABLE "COMMON_USER"."CMTOFFICE_M" ;
CREATE VIEW DABS.CMTCONSUMER_M AS
SELECT * FROM CENTRAL_ALL.CMTCONSUMER_M WHERE OFFICE_ID IN (SELECT ID FROM CENTRAL_ALL.CMTOFFICE_M WHERE PARENTOFFICE_ID='200') ;
CREATE VIEW DABS.CMTOFFICE_M  AS  SELECT CMO.ID, CMO.CODE, DECODE(CMO.NAME,'KABUL','KED',CMO.NAME)
NAME, CMO.OFFICETYPE_ID, CMO.PARENTOFFICE_ID, CMO.EROOFFICE_ID, CMO.RESPONSIBLEPERSON_ID,
CMO.DOOR_NO, CMO.AREA, CMO.STREET, CMO.CITY, CMO.PHONE1, CMO.PHONE2, CMO.PHONE3,
CMO.FAX, CMO.EMAIL, CMO.CREATE_DATE, CMO.CREATED_BY, CMO.UPDATED_BY, CMO.UPDATE_DATE,
CMO.DB_IP_ADDRESS, CMO.SOURCE_OFFICE_ID, CMO.TARGET_OFFICE_ID, CMO.RECORD_STATUS,
CMO.SCREEN_ID, CMO.MONTH, CMO.YEAR, CMO.FLAG1, CMO.FLAG2, CMO.FLAG3, CMO.FLAG4,
CMO.FLAG5, CMO.CHECK_CONDITION, CMO.CHECK_CONDITION1, CMO.TIMING_FRHR,
CMO.TIMING_FRMI, CMO.TIMING_TOHR, CMO.TIMING_TOMI, CMO.MODULE_ID, CMO.SUBMODULE_ID,
CMO.UCODE, CMO.IS_NETWORKED, CMO.AUTHENTICATION_NUMBER, CMO.OLD_UCODE FROM
COMMON_USER.CMTOFFICE_M CMO WHERE PARENTOFFICE_ID  IN ('-2','246','200') ;
CREATE VIEW CENTRAL_ALL.ZONE_OFFICE_CATEGORY_RELATION  AS  SELECT
DISTINCT ID, KED, ZONE, ZONE_ID, JUNCTION, JUNCTION_ID, CATEGORY, CATEGORY_ID,
PARENT_OFFICEID, RECORD_STATUS, CHECK_CONDITION, CREATE_DATE, UPDATE_DATE,
NAME,  COMM_ID, PARENT, PRIORITY,CYCLE_CYEAR,CYCLE,BILLMODE     FROM  (
   SELECT ID, KED, ZONE_NAME ZONE,ZONE_ID,junction_name JUNCTION,JUNCTION_ID,
category_name CATEGORY,CATEGORY_ID,PARENT_ID PARENT_OFFICEID,'ACTIVE' AS
RECORD_STATUS,NULL AS CHECK_CONDITION,NULL AS CREATE_DATE,NULL AS UPDATE_DATE,
NAME,COMM_ID, PARENT,PRIORITY,CYCLE_CYEAR,CYCLE,BILLMODE     FROM (
 SELECT DISTINCT B.ID AS ID,B.NAME AS KED,B.PARENTOFFICE_ID AS PARENT_ID,NULL
AS ZONE_ID,NULL AS ZONE_NAME,NULL AS JUNCTION_ID, NULL AS junction_name,NULL
AS CATEGORY_ID, NULL AS category_name,B.NAME as NAME,B.ID as COMM_ID,B.PARENTOFFICE_ID
AS PARENT,'A' AS PRIORITY,'--' AS CYCLE_CYEAR,'-' AS CYCLE,0  AS BILLMODE     FROM CENTRAL_ALL.CMTOFFICE_M A,CENTRAL_ALL.CMTOFFICE_M B     WHERE A.RECORD_STATUS='ACTIVE' AND B.RECORD_STATUS='ACTIVE' AND A.PARENTOFFICE_ID=B.ID AND B.ID='246'     UNION ALL     SELECT DISTINCT B.ID AS ID,B.NAME AS KED,B.PARENTOFFICE_ID AS PARENT_ID,NULL AS ZONE_ID,NULL AS ZONE_NAME,NULL AS JUNCTION_ID, NULL AS junction_name,NULL AS CATEGORY_ID, NULL AS category_name,B.NAME as NAME,B.ID as COMM_ID,B.PARENTOFFICE_ID AS PARENT,'K' AS PRIORITY,'--' AS CYCLE_CYEAR,'-' AS CYCLE,0  AS BILLMODE     FROM CENTRAL_ALL.CMTOFFICE_M A,CENTRAL_ALL.CMTOFFICE_M B     WHERE A.RECORD_STATUS='ACTIVE' AND B.RECORD_STATUS='ACTIVE' AND A.PARENTOFFICE_ID=B.ID AND B.ID<>'246'     UNION ALL     SELECT DISTINCT D.ID,E.NAME AS KED,E.ID AS PARENT_ID,D.ID AS ZONE_ID,D.NAME AS ZONE_NAME, NULL AS JUNCTION_ID,NULL AS JUNCTION_NAME,NULL AS CATEGORY_ID,NULL AS CATEGORY_NAME,D.NAME AS NAME,D.ID AS COMM_ID,E.ID AS PARENT, 'Z' AS PRIORITY,F.CYCLE_YEAR_DHARI AS CYCLE_CYEAR,F.CYCLE_CODE,F.BILLMODE AS BILLMODE     FROM CENTRAL_ALL.CMTOFFICE_M A,CENTRAL_ALL.ZONE_OFFICE_REL_M B,CENTRAL_ALL.ZONE_TARIFF_REL_CONGIF_M C,CENTRAL_ALL.ZONECYCLE_CONFIG_M D,CENTRAL_ALL.CMTOFFICE_M E,CENTRAL_ALL.ZONE_CYCLE_REL_M F     WHERE A.ID=B.OFFICE_ID AND B.ZONE_ID=C.ZONE_ID AND B.ZONE_ID=D.ID AND A.PARENTOFFICE_ID=E.ID AND A.RECORD_STATUS='ACTIVE' AND B.RECORD_STATUS='ACTIVE' AND C.RECORD_STATUS='ACTIVE' AND D.RECORD_STATUS='ACTIVE' AND E.RECORD_STATUS='ACTIVE' AND F.RECORD_STATUS='ACTIVE'  AND B.ZONE_ID=F.ZONE_ID AND TRUNC(SYSDATE) BETWEEN TRUNC(F.START_DATE) AND (F.FINAL_DATE) AND F.ACTIVITY='1000-2' AND B.ID<>'246'     UNION ALL     SELECT DISTINCT A.ID||D.ID AS ID,E.NAME AS KED,D.ID AS PARENT_ID,D.ID AS ZONE_ID,D.NAME AS ZONE_NAME, A.ID AS JUNCTION_ID,A.NAME AS JUNCTION_NAME,NULL AS CATEGORY_ID,NULL AS CATEGORY_NAME,A.NAME AS NAME,A.ID AS COMM_ID,D.ID AS PARENT, 'J' AS PRIORITY,'--' AS CYCLE_CYEAR,'-' AS CYCLE,0  AS BILLMODE     FROM CENTRAL_ALL.CMTOFFICE_M A,CENTRAL_ALL.ZONE_OFFICE_REL_M B,CENTRAL_ALL.ZONE_TARIFF_REL_CONGIF_M C,CENTRAL_ALL.ZONECYCLE_CONFIG_M D,CENTRAL_ALL.CMTOFFICE_M E     WHERE A.ID=B.OFFICE_ID AND B.ZONE_ID=C.ZONE_ID AND B.ZONE_ID=D.ID AND A.PARENTOFFICE_ID=E.ID AND A.RECORD_STATUS='ACTIVE' AND B.RECORD_STATUS='ACTIVE' AND C.RECORD_STATUS='ACTIVE' AND D.RECORD_STATUS='ACTIVE' AND E.RECORD_STATUS='ACTIVE' AND B.ID<>'246'     UNION ALL     SELECT DISTINCT A.ID||D.ID||C.CATEGORY_ID AS ID,E.NAME AS KED,A.ID||D.ID AS PARENT_ID,D.ID AS ZONE_ID,D.NAME AS ZONE_NAME, A.ID AS JUNCTION_ID,A.NAME AS JUNCTION_NAME,CATEGORY_ID AS CATEGORY_ID,(    SELECT NAME     FROM CENTRAL_ALL.NCTCATEGORY_M     WHERE ID=C.CATEGORY_ID) AS CATEGORY_NAME, (    SELECT REPLACE(NAME,'_',' ')     FROM CENTRAL_ALL.NCTCATEGORY_M     WHERE ID=C.CATEGORY_ID) AS NAME,C.CATEGORY_ID AS COMM_ID,A.ID AS PARENT, 'C' AS PRIORITY,'--' AS CYCLE_CYEAR,'-' AS CYCLE,0  AS BILLMODE     FROM CENTRAL_ALL.CMTOFFICE_M A,CENTRAL_ALL.ZONE_OFFICE_REL_M B,CENTRAL_ALL.ZONE_TARIFF_REL_CONGIF_M C,CENTRAL_ALL.ZONECYCLE_CONFIG_M D,CENTRAL_ALL.CMTOFFICE_M E     WHERE A.ID=B.OFFICE_ID AND B.ZONE_ID=C.ZONE_ID AND B.ZONE_ID=D.ID AND A.PARENTOFFICE_ID=E.ID AND A.RECORD_STATUS='ACTIVE' AND B.RECORD_STATUS='ACTIVE' AND C.RECORD_STATUS='ACTIVE' AND D.RECORD_STATUS='ACTIVE' AND E.RECORD_STATUS='ACTIVE' AND B.ID<>'246' )  ORDER BY TO_NUMBER(DECODE(PRIORITY,'A','1','K','2','Z','3','J','4','C','5')))  WITH NO ROW MOVEMENT
 ;
CREATE VIEW DABS.BILLING_SCHEDULE  AS  SELECT ROWNUM AS ID,ZONE_NAME,
ACTIVITY, OFFICE_ID, AREA_ID, DTR_ID, POLE_ID, START_DATE, END_DATE, GRACE_DAYS,
FINAL_DATE, PREALERT_DAYS, ALERT_TYPE,   CREATED_BY, CREATE_DATE, UPDATED_BY,
UPDATE_DATE, SOURCE_OFFICE_ID, TARGET_OFFICE_ID, SCREEN_ID, MODULE_ID,
SUBMODULE_ID, RECORD_STATUS, DB_IP_ADDRESS, MONTH, YEAR, FLAG1, FLAG2,
FLAG3, FLAG4, FLAG5,   METER_DAY, CHECK_CONDITION,ROUTE_CODE, ROUTE_CODE_DHARI,
ROUTE_CYCLE, ROUTE_CYCLE_DHARI, PRST_RDG_DATE, FROM_SEQUENCE         FROM
(         SELECT DISTINCT ZONE_NAME,'1000-2' ACTIVITY,OFFICE_ID, AREA_ID,
DTR_ID, POLE_ID,SYSDATE START_DATE,SYSDATE END_DATE,0 AS GRACE_DAYS,SYSDATE
FINAL_DATE, 0 AS PREALERT_DAYS,NULL ALERT_TYPE, '99' CREATED_BY,SYSDATE
CREATE_DATE,NULL UPDATED_BY,SYSDATE UPDATE_DATE,NULL SOURCE_OFFICE_ID,NULL
TARGET_OFFICE_ID, 'VIEW' SCREEN_ID,NULL MODULE_ID,NULL SUBMODULE_ID, RECORD_STATUS,'DB'
DB_IP_ADDRESS, MONTH(SYSDATE) AS MONTH,YEAR(SYSDATE) AS YEAR,'1' FLAG1,
FLAG2, FLAG3,NULL FLAG4, NULL FLAG5,NULL METER_DAY, NULL AS CHECK_CONDITION,
ROUTE_CODE, ROUTE_CODE_DHARI, '05'||ROUTE_CODE ROUTE_CYCLE,'05'||ROUTE_CODE_DHARI
ROUTE_CYCLE_DHARI,NULL PRST_RDG_DATE, NULL FROM_SEQUENCE     FROM CENTRAL_ALL.BILLING_SCHEDULE
            WHERE OFFICE_ID IN (            SELECT ID             FROM
CENTRAL_ALL.CMTOFFICE_M             WHERE PARENTOFFICE_ID='200') AND RECORD_STATUS='ACTIVE')
 WITH NO ROW MOVEMENT ;
CREATE TRIGGER COMMON_USER.TRIG_BRIN_CMTOFFICE_M
  NO CASCADE BEFORE INSERT
  ON COMMON_USER.CMTOFFICE_M
  REFERENCING
    NEW AS NEW
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.PARENTOFFICE_ID||','||NEW.UCODE;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTOFFICE_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTOFFICE_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTOFFICE_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CMTOFFICE_M" TO USER "DB2INST1"  ;


-- COMMON_USER.CMTPROCESS_CONFIG_M definition

CREATE TABLE "COMMON_USER"."CMTPROCESS_CONFIG_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "PROC_NAME" VARCHAR(25 OCTETS) ,
		  "PROC_CODE" VARCHAR(5 OCTETS) NOT NULL ,
		  "REMARKS" VARCHAR(100 OCTETS) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "CHECK_CONDITION" VARCHAR(40 OCTETS) NOT NULL ,
		  "RECORD_STATUS" VARCHAR(20 OCTETS) NOT NULL ,
		  "MODULE" VARCHAR(50 OCTETS) ,
		  "PRIORITY" BIGINT NOT NULL ,
		  "FROM_DAY" VARCHAR(10 OCTETS) ,
		  "TO_DAY" VARCHAR(10 OCTETS) ,
		  "FROM_TIME" VARCHAR(10 OCTETS) ,
		  "TO_TIME" VARCHAR(10 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;
ALTER TABLE "COMMON_USER"."CMTPROCESS_CONFIG_M"
	ADD CONSTRAINT "PK_CMTPROCESS_CONFIG_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."CMTPROCESS_CONFIG_M"
	ADD CONSTRAINT "UK_CMTPROCESS_CONFIG_M" UNIQUE
		("CHECK_CONDITION") ;

ALTER TABLE "COMMON_USER"."CMTPROCESS_CONFIG_M"
	ADD CONSTRAINT "UK_PROC_CODE_CMTPROCESS_CONFIG_M" UNIQUE
		("PROC_CODE") ;
CREATE ALIAS "CENTRAL_ALL"."CMTPROCESS_CONFIG_M" FOR TABLE "COMMON_USER"."CMTPROCESS_CONFIG_M" ;
CREATE ALIAS "DABS    "."CMTPROCESS_CONFIG_M" FOR TABLE "COMMON_USER"."CMTPROCESS_CONFIG_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_CMTPROCESS_CONFIG_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."CMTPROCESS_CONFIG_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = UPPER(TRIM(NEW.PROC_NAME));--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_CMTPROCESS_CONFIG_M"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."CMTPROCESS_CONFIG_M"
  REFERENCING
              OLD AS "OLD"
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	DECLARE CNT INTEGER;--

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = UPPER(TRIM(NEW.PROC_NAME));--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTPROCESS_CONFIG_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTPROCESS_CONFIG_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTPROCESS_CONFIG_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CMTPROCESS_CONFIG_M" TO USER "DB2INST1"  ;


-- COMMON_USER.CMTUSER_OFFICE_REL_T definition

CREATE TABLE "COMMON_USER"."CMTUSER_OFFICE_REL_T"  (
		  "ID" VARCHAR(255 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(255 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP ,
		  "UPDATE_DATE" TIMESTAMP ,
		  "CREATED_BY" VARCHAR(255 OCTETS) ,
		  "UPDATED_BY" VARCHAR(255 OCTETS) ,
		  "MONTH" INTEGER ,
		  "YEAR" INTEGER ,
		  "DB_IP_ADDRESS" VARCHAR(255 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(255 OCTETS) ,
		  "USER_ID" VARCHAR(255 OCTETS) ,
		  "JUNCTION" VARCHAR(255 OCTETS) ,
		  "PROVIENCE" VARCHAR(5 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(40 OCTETS) NOT NULL ,
		  "CHECKFLAG" VARCHAR(5 OCTETS) ,
		  "SUBSTN_ID" VARCHAR(35 OCTETS) )
		 IN "USERSPACE1"
		 ORGANIZE BY ROW  ;

CREATE INDEX "COMMON_USER"."IDX_JUNCTION_OFCREL" ON "COMMON_USER"."CMTUSER_OFFICE_REL_T"
		("JUNCTION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS DISALLOW REVERSE SCANS ;

CREATE INDEX "COMMON_USER"."IDX_USRID_USREL" ON "COMMON_USER"."CMTUSER_OFFICE_REL_T"
		("USER_ID" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS DISALLOW REVERSE SCANS ;

CREATE INDEX "COMMON_USER"."IX_CMTUSER_OFFICE_REL_T_PROV" ON "COMMON_USER"."CMTUSER_OFFICE_REL_T"
		("PROVIENCE" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;

CREATE INDEX "COMMON_USER"."IX_CMTUSER_OFFICE_REL_T_RECORDSTATUS" ON "COMMON_USER"."CMTUSER_OFFICE_REL_T"
		("RECORD_STATUS" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."CMTUSER_OFFICE_REL_T"
	ADD PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."CMTUSER_OFFICE_REL_T"
	ADD CONSTRAINT "UK_CMTUSER_OFFICE_REL_T_CHK_COND" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."CMTUSER_OFFICE_REL_T" FOR TABLE "COMMON_USER"."CMTUSER_OFFICE_REL_T" ;
CREATE VIEW DABS.CMTUSER_OFFICE_REL_T AS
SELECT * FROM COMMON_USER.CMTUSER_OFFICE_REL_T A WHERE EXISTS (SELECT ID FROM DABS.CMTOFFICE_M WHERE ID=A.JUNCTION) ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_CMTUSER_OFFICE_REL_T"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."CMTUSER_OFFICE_REL_T"
  REFERENCING
    NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.USER_ID||','||NEW.JUNCTION;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_CMTUSER_OFFICE_REL_T"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."CMTUSER_OFFICE_REL_T"
  REFERENCING
    OLD AS "OLD"
    NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	DECLARE CNT INTEGER;--

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.USER_ID||','||NEW.JUNCTION;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTUSER_OFFICE_REL_T" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTUSER_OFFICE_REL_T" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMTUSER_OFFICE_REL_T" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CMTUSER_OFFICE_REL_T" TO USER "DB2INST1"  ;


-- COMMON_USER.CMT_ACTIVITIES_T definition

CREATE TABLE "COMMON_USER"."CMT_ACTIVITIES_T"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "ACTIVITY" VARCHAR(200 OCTETS) ,
		  "ZONENAME" VARCHAR(20 OCTETS) ,
		  "CREATED_BY" VARCHAR(15 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "MODULE_ID" VARCHAR(15 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(15 OCTETS) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(50 OCTETS) ,
		  "MONTH" DECFLOAT(16) ,
		  "YEAR" DECFLOAT(16) ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "PARENT_ACTIVITY" VARCHAR(20 OCTETS) ,
		  "EFFECT_DATE" TIMESTAMP )
		 IN "TS8"
		 ORGANIZE BY ROW  ;
ALTER TABLE "COMMON_USER"."CMT_ACTIVITIES_T"
	ADD CONSTRAINT "CMT_ACTIVITIES_T_PK" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."CMT_ACTIVITIES_T" FOR TABLE "COMMON_USER"."CMT_ACTIVITIES_T" ;

GRANT SELECT ON TABLE "COMMON_USER"."CMT_ACTIVITIES_T" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMT_ACTIVITIES_T" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CMT_ACTIVITIES_T" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CMT_ACTIVITIES_T" TO USER "DB2INST1"  ;


-- COMMON_USER.CONSGROUP_M definition

CREATE TABLE "COMMON_USER"."CONSGROUP_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "GROUP_CODE" VARCHAR(20 OCTETS) NOT NULL ,
		  "GROUP_NAME" VARCHAR(50 OCTETS) NOT NULL ,
		  "GADDR_1" VARCHAR(200 OCTETS) ,
		  "GADDR_2" VARCHAR(350 OCTETS) ,
		  "GADDR_3" VARCHAR(50 OCTETS) ,
		  "GADDR_4" VARCHAR(30 OCTETS) ,
		  "CREATED_BY" VARCHAR(15 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECIMAL(2,0) NOT NULL ,
		  "YEAR" DECIMAL(4,0) NOT NULL ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(15 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "PHONE" VARCHAR(30 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(50 OCTETS) NOT NULL )
		 IN "TS8"
		 ORGANIZE BY ROW  ;
ALTER TABLE "COMMON_USER"."CONSGROUP_M"
	ADD CONSTRAINT "CONSGROUP_M_PK" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."CONSGROUP_M"
	ADD CONSTRAINT "UK_CONSGROUP_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."CONSGROUP_M" FOR TABLE "COMMON_USER"."CONSGROUP_M" ;
CREATE ALIAS "DABS    "."CONSGROUP_M" FOR TABLE "COMMON_USER"."CONSGROUP_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_CONSGROUP_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."CONSGROUP_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

        IF (NEW.RECORD_STATUS='ACTIVE') THEN

                SET NEW.CHECK_CONDITION = NEW.GROUP_NAME;--

        ELSE

                SET NEW.CHECK_CONDITION = NEW.ID;--

        END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."CONSGROUP_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CONSGROUP_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CONSGROUP_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CONSGROUP_M" TO USER "DB2INST1"  ;


-- COMMON_USER.COUNTER_MASTER definition

CREATE TABLE "COMMON_USER"."COUNTER_MASTER"  (
		  "ID" VARCHAR(10 OCTETS) NOT NULL ,
		  "COUNTER_NAME" VARCHAR(50 OCTETS) NOT NULL ,
		  "COUNTER_CODE" VARCHAR(20 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(15 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "CHECK_CONDITION" VARCHAR(200 OCTETS) NOT NULL ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(250 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) ,
		  "CHECK_CONDITION1" VARCHAR(25 OCTETS) ,
		  "DIVISION" VARCHAR(20 OCTETS) ,
		  "VANCC" VARCHAR(50 OCTETS) ,
		  "BANKCODE" VARCHAR(10 OCTETS) ,
		  "BRANCHCODE" VARCHAR(10 OCTETS) ,
		  "MAC_ADDRESS" VARCHAR(20 OCTETS) ,
		  "ACTIVATION_CODE" VARCHAR(40 OCTETS) ,
		  "ACTIVATION_FLAG" VARCHAR(1 OCTETS) ,
		  "MAX_AMOUNT" DECIMAL(17,5) ,
		  "AMOUNT_PAID" DECIMAL(17,5) ,
		  "WEEKLY_MAX_AMOUNT" DECIMAL(17,5) ,
		  "WEEKLY_AMOUNT_PAID" DECIMAL(17,5) ,
		  "MONTHLY_MAX_AMOUNT" DECIMAL(17,5) ,
		  "MONTHLY_AMOUNT_PAID" DECIMAL(17,5) ,
		  "VALIDATION_TYPE" VARCHAR(100 OCTETS) ,
		  "VALIDATION" VARCHAR(20 OCTETS) ,
		  "WEEK_END_DATE" TIMESTAMP ,
		  "MONTH_END_DATE" TIMESTAMP ,
		  "FROM_DATE" TIMESTAMP ,
		  "TO_DATE" TIMESTAMP ,
		  "EXTENDED_MAXAMOUNT" VARCHAR(10 OCTETS) ,
		  "WEEKLY_EXTENDED_MAXAMOUNT" VARCHAR(10 OCTETS) ,
		  "MONTHLY_EXTENDED_MAXAMOUNT" VARCHAR(10 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."COUNTER_MASTER"."COUNTER_CODE" IS 'Contains Counter Code' ;

COMMENT ON COLUMN "COMMON_USER"."COUNTER_MASTER"."COUNTER_NAME" IS 'Name of the Counter' ;

COMMENT ON COLUMN "COMMON_USER"."COUNTER_MASTER"."FLAG3" IS 'collection Type Bill/Misc' ;

COMMENT ON COLUMN "COMMON_USER"."COUNTER_MASTER"."FLAG4" IS 'collection Center type Mobile Van or Subdiv' ;

COMMENT ON COLUMN "COMMON_USER"."COUNTER_MASTER"."FLAG5" IS 'collection Type Bill/Misc' ;

COMMENT ON COLUMN "COMMON_USER"."COUNTER_MASTER"."ID" IS 'Unique Id acts as primary key' ;

CREATE INDEX "COMMON_USER"."IX21_COUNTER_MASTE" ON "COMMON_USER"."COUNTER_MASTER"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;

CREATE INDEX "COMMON_USER"."IX22_COUNTER_MASTE" ON "COMMON_USER"."COUNTER_MASTER"
		("CHECK_CONDITION1" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."COUNTER_MASTER"
	ADD CONSTRAINT "PK_COUNTER_MASTER" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."COUNTER_MASTER"
	ADD CONSTRAINT "UK_COUNTER_MASTER" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."COUNTER_MASTER" FOR TABLE "COMMON_USER"."COUNTER_MASTER" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_COUNTER_MASTER"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."COUNTER_MASTER"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.COUNTER_NAME;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;
CREATE TRIGGER COMMON_USER.TRIG_BRUP_COUNTER_MASTER
  NO CASCADE BEFORE UPDATE
  ON COMMON_USER.COUNTER_MASTER
  REFERENCING
    OLD AS OLD
    NEW AS NEW
  FOR EACH ROW
BEGIN ATOMIC
	DECLARE CNT INTEGER;--
	IF (NEW.RECORD_STATUS='ACTIVE') THEN
		SET NEW.CHECK_CONDITION = NEW.COUNTER_NAME;--
	ELSE
		SET CNT = (SELECT COUNT(*) FROM COUNTER_USER_REL_M WHERE COUNTER_ID = OLD.ID AND RECORD_STATUS='ACTIVE') ;--
		IF (CNT>0) THEN
			 SIGNAL SQLSTATE '80560' ('Child Record Exists You Can''t Delete Record...');--
		END IF;--
		SET NEW.CHECK_CONDITION = NEW.ID;--
	END IF;--
END ;

GRANT SELECT ON TABLE "COMMON_USER"."COUNTER_MASTER" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."COUNTER_MASTER" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."COUNTER_MASTER" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."COUNTER_MASTER" TO USER "DB2INST1"  ;


-- COMMON_USER.COUNTER_MAXAMOUNT definition

CREATE TABLE "COMMON_USER"."COUNTER_MAXAMOUNT"  (
		  "ID" VARCHAR(20 OCTETS) NOT NULL ,
		  "LOG_DATE" TIMESTAMP ,
		  "COUNTER_ID" VARCHAR(20 OCTETS) ,
		  "MAX_AMOUNT" DECIMAL(17,5) ,
		  "AMOUNT_PAID" DECIMAL(17,5) ,
		  "PENDING_CNT" DECIMAL(5,0) ,
		  "APPROVED_CNT" DECIMAL(5,0) ,
		  "RECORD_STATUS" VARCHAR(20 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) ,
		  "FLAG1" VARCHAR(20 OCTETS) ,
		  "FLAG2" VARCHAR(20 OCTETS) ,
		  "FLAG3" VARCHAR(20 OCTETS) ,
		  "FLAG4" VARCHAR(20 OCTETS) ,
		  "FLAG5" VARCHAR(20 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "MONTH" DECIMAL(4,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "EXTENDED_MAXAMOUNT" VARCHAR(20 OCTETS) ,
		  "WEEKLY_MAX_AMOUNT" DECIMAL(17,5) ,
		  "WEEKLY_PAYMENT_AMOUNT" DECIMAL(17,5) ,
		  "MONTHLY_MAX_AMOUNT" DECIMAL(17,5) ,
		  "MONTHLY_PAYMENT_AMOUNT" DECIMAL(17,5) ,
		  "VALIDATION_TYPE" VARCHAR(100 OCTETS) ,
		  "WEEK_END_DATE" TIMESTAMP ,
		  "MONTH_END_DATE" TIMESTAMP ,
		  "WEEKLY_EXTENDED_MAXAMOUNT" VARCHAR(20 OCTETS) ,
		  "MONTHLY_EXTENDED_MAXAMOUNT" VARCHAR(20 OCTETS) )
		 IN "USERSPACE1"
		 ORGANIZE BY ROW  ;
CREATE ALIAS "CENTRAL_ALL"."COUNTER_MAXAMOUNT" FOR TABLE "COMMON_USER"."COUNTER_MAXAMOUNT" ;

GRANT SELECT ON TABLE "COMMON_USER"."COUNTER_MAXAMOUNT" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."COUNTER_MAXAMOUNT" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."COUNTER_MAXAMOUNT" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."COUNTER_MAXAMOUNT" TO USER "DB2INST1"  ;


-- COMMON_USER.COUNTER_USER_REL_M definition

CREATE TABLE "COMMON_USER"."COUNTER_USER_REL_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "COUNTER_ID" VARCHAR(50 OCTETS) NOT NULL ,
		  "USER_ID" VARCHAR(50 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(15 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "CHECK_CONDITION" VARCHAR(200 OCTETS) NOT NULL ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) ,
		  "CHECK_CONDITION1" VARCHAR(30 OCTETS) NOT NULL ,
		  "FDATE" TIMESTAMP(0) ,
		  "TDATE" TIMESTAMP(0) ,
		  "EMPOYEE_CODE" VARCHAR(20 OCTETS) ,
		  "BANK_CODE" VARCHAR(2 OCTETS) ,
		  "BRANCH_CODE" VARCHAR(3 OCTETS) ,
		  "MAC_ADDRESS" VARCHAR(20 OCTETS) ,
		  "OPEN_TIME" VARCHAR(10 OCTETS) ,
		  "CLOSE_TIME" VARCHAR(10 OCTETS) ,
		  "MOBILE_NUM" VARCHAR(15 OCTETS) ,
		  "ACTIVATIONFLAG" VARCHAR(5 OCTETS) ,
		  "EMAIL" VARCHAR(50 OCTETS) ,
		  "MESSAGE_TYPE" VARCHAR(5 OCTETS) ,
		  "APPID" VARCHAR(15 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."COUNTER_USER_REL_M"."COUNTER_ID" IS 'Contains Counter ID' ;

COMMENT ON COLUMN "COMMON_USER"."COUNTER_USER_REL_M"."EMPOYEE_CODE" IS 'Contains Employee Code' ;

COMMENT ON COLUMN "COMMON_USER"."COUNTER_USER_REL_M"."FDATE" IS 'fROM Date' ;

COMMENT ON COLUMN "COMMON_USER"."COUNTER_USER_REL_M"."ID" IS 'Unique Id acts as primary key' ;

COMMENT ON COLUMN "COMMON_USER"."COUNTER_USER_REL_M"."TDATE" IS 'To Date' ;

COMMENT ON COLUMN "COMMON_USER"."COUNTER_USER_REL_M"."USER_ID" IS 'Contains User ID' ;
ALTER TABLE "COMMON_USER"."COUNTER_USER_REL_M"
	ADD CONSTRAINT "PK_COUNTER_USER_REL_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."COUNTER_USER_REL_M"
	ADD CONSTRAINT "UK1_COUNTER_USER_REL_M" UNIQUE
		("CHECK_CONDITION") ;

ALTER TABLE "COMMON_USER"."COUNTER_USER_REL_M"
	ADD CONSTRAINT "UK2_COUNTER_USER_REL_M" UNIQUE
		("CHECK_CONDITION1") ;
CREATE ALIAS "CENTRAL_ALL"."COUNTER_USER_REL_M" FOR TABLE "COMMON_USER"."COUNTER_USER_REL_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_COUNTER_USER_REL_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."COUNTER_USER_REL_M"
  REFERENCING
    NEW AS NEW
  FOR EACH ROW
BEGIN ATOMIC
	IF (NEW.RECORD_STATUS='ACTIVE') THEN
		SET NEW.CHECK_CONDITION = 'UK1-'||NEW.USER_ID;--
    SET NEW.CHECK_CONDITION1 = 'UK2-'||NEW.COUNTER_ID;--
	ELSE
		SET NEW.CHECK_CONDITION = NEW.ID;--
    SET NEW.CHECK_CONDITION1 = NEW.ID;--
	END IF;--
END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_COUNTER_USER_REL_M"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."COUNTER_USER_REL_M"
  REFERENCING
    NEW AS NEW
  FOR EACH ROW
BEGIN ATOMIC
	IF (NEW.RECORD_STATUS='ACTIVE') THEN
		SET NEW.CHECK_CONDITION ='UK1-'|| NEW.USER_ID;--
    SET NEW.CHECK_CONDITION1 = 'UK2-'||NEW.COUNTER_ID;--
  ELSE
		SET NEW.CHECK_CONDITION = NEW.ID;--
    SET NEW.CHECK_CONDITION1 = NEW.ID;--
	END IF;--
END ;

GRANT SELECT ON TABLE "COMMON_USER"."COUNTER_USER_REL_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."COUNTER_USER_REL_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."COUNTER_USER_REL_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."COUNTER_USER_REL_M" TO USER "DB2INST1"  ;


-- COMMON_USER.CSTREQUESTTYPE_M definition

CREATE TABLE "COMMON_USER"."CSTREQUESTTYPE_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "TYPE" VARCHAR(50 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(20 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECFLOAT(16) NOT NULL ,
		  "YEAR" DECFLOAT(16) NOT NULL ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(4 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(40 OCTETS) NOT NULL ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."CSTREQUESTTYPE_M"."ID" IS 'Unique Id acts as primary key' ;

COMMENT ON COLUMN "COMMON_USER"."CSTREQUESTTYPE_M"."TYPE" IS 'Type Of Request' ;

CREATE INDEX "COMMON_USER"."IX31_CSTREQUESTTYP" ON "COMMON_USER"."CSTREQUESTTYPE_M"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."CSTREQUESTTYPE_M"
	ADD CONSTRAINT "PK_CSTREQUESTTYPE_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."CSTREQUESTTYPE_M"
	ADD CONSTRAINT "UK_CSTREQUESTTYPE_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."CSTREQUESTTYPE_M" FOR TABLE "COMMON_USER"."CSTREQUESTTYPE_M" ;
CREATE ALIAS "DABS    "."CSTREQUESTTYPE_M" FOR TABLE "COMMON_USER"."CSTREQUESTTYPE_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_CSTREQUESTTYPE_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."CSTREQUESTTYPE_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.TYPE;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_CSTREQUESTTYPE_M"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."CSTREQUESTTYPE_M"
  REFERENCING
              OLD AS "OLD"
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	DECLARE CNT INTEGER;--

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.TYPE;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."CSTREQUESTTYPE_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CSTREQUESTTYPE_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CSTREQUESTTYPE_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CSTREQUESTTYPE_M" TO USER "DB2INST1"  ;


-- COMMON_USER.CSTREQUEST_M definition

CREATE TABLE "COMMON_USER"."CSTREQUEST_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "TYPE_ID" VARCHAR(60 OCTETS) NOT NULL ,
		  "REQUEST_NATURE" VARCHAR(150 OCTETS) NOT NULL ,
		  "SERVICE_LEVEL" DECIMAL(3,0) NOT NULL ,
		  "FIRST_ESCALATION_ON" DECIMAL(3,0) ,
		  "SECOND_ESCALATION_ON" DECIMAL(3,0) ,
		  "FIRST_ESCALATIONTO_ID" VARCHAR(60 OCTETS) ,
		  "SECOND_ESCALATIONTO_ID" VARCHAR(60 OCTETS) ,
		  "RESPONSIBLEOFFICETYPE_ID" VARCHAR(60 OCTETS) NOT NULL ,
		  "REQUEST_RESOLVING_BASIS" DECIMAL(1,0) NOT NULL ,
		  "CREATED_BY" VARCHAR(60 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(60 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(75 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(60 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(60 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(30 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(60 OCTETS) NOT NULL ,
		  "MONTH" DECFLOAT(16) NOT NULL ,
		  "YEAR" DECFLOAT(16) NOT NULL ,
		  "FLAG1" VARCHAR(3 OCTETS) ,
		  "FLAG2" VARCHAR(15 OCTETS) ,
		  "FLAG3" VARCHAR(3 OCTETS) ,
		  "FLAG4" VARCHAR(3 OCTETS) ,
		  "FLAG5" VARCHAR(3 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(150 OCTETS) NOT NULL ,
		  "IS_INSPECTION_REQUIRED" CHAR(3 OCTETS) ,
		  "INSPECTION_DURATION" DECIMAL(10,2) ,
		  "MODULE_ID" VARCHAR(60 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(60 OCTETS) ,
		  "OTHERCATAMOUNT" DECIMAL(12,2) ,
		  "CAT1AMOUNT" DECIMAL(12,2) ,
		  "PAYMENT_REQUIRED" VARCHAR(3 OCTETS) ,
		  "IS_APP_FEES_REQUIRED" VARCHAR(3 OCTETS) ,
		  "TYPE_OF_SERVICE" DECIMAL(1,0) ,
		  "IS_ESCALATION_REQUIRED" VARCHAR(3 OCTETS) ,
		  "IS_SCNO_REQUIRED" VARCHAR(3 OCTETS) ,
		  "EFFECTIVE_DATE" TIMESTAMP(0) NOT NULL ,
		  "DISPLAY_NATURE" VARCHAR(3 OCTETS) NOT NULL ,
		  "DURATION" DECIMAL(10,2) ,
		  "PENDING_BEYOND" VARCHAR(30 OCTETS) ,
		  "CONSUMER_CHANGE_STATUS" DECIMAL(2,0) ,
		  "FLAG6" VARCHAR(6 OCTETS) ,
		  "FLAG7" VARCHAR(6 OCTETS) ,
		  "ISDIRECT_PAYMENT" VARCHAR(6 OCTETS) ,
		  "ISESTIMATION_REQUIRED" VARCHAR(6 OCTETS) ,
		  "CODE" VARCHAR(9 OCTETS) ,
		  "MODULE_TYPE" VARCHAR(15 OCTETS) ,
		  "SEARCH_BY" VARCHAR(6 OCTETS) ,
		  "CONDITION" VARCHAR(60 OCTETS) ,
		  "IS_AUTO_DISPATCH" VARCHAR(15 OCTETS) ,
		  "IS_AUTO_DISPATCH_ID" VARCHAR(15 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;
ALTER TABLE "COMMON_USER"."CSTREQUEST_M"
	ADD CONSTRAINT "CSTREQUEST_M_PK" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."CSTREQUEST_M"
	ADD CONSTRAINT "UK_CSTREQUEST_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."CSTREQUEST_M" FOR TABLE "COMMON_USER"."CSTREQUEST_M" ;
CREATE ALIAS "DABS    "."CSTREQUEST_M" FOR TABLE "COMMON_USER"."CSTREQUEST_M" ;
CREATE ALIAS "DABS    "."INSTALMENT_CONFIG_M" FOR TABLE "DABS    "."CSTREQUEST_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_CSTREQUEST_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."CSTREQUEST_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.REQUEST_NATURE;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_CSTREQUEST_M"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."CSTREQUEST_M"
  REFERENCING
              OLD AS "OLD"
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	DECLARE CNT INTEGER;--

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.REQUEST_NATURE;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."CSTREQUEST_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CSTREQUEST_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CSTREQUEST_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CSTREQUEST_M" TO USER "DB2INST1"  ;


-- COMMON_USER.CSTSTATUS_M definition

CREATE TABLE "COMMON_USER"."CSTSTATUS_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "STATUS" VARCHAR(50 OCTETS) NOT NULL ,
		  "STATUSVALUE" VARCHAR(4 OCTETS) ,
		  "IS_SKIPPED" VARCHAR(1 OCTETS) ,
		  "DIS_STATUS" VARCHAR(1 OCTETS) ,
		  "STATUS_DIS" VARCHAR(100 OCTETS) ,
		  "IS_MANDATORY" VARCHAR(1 OCTETS) ,
		  "PARENT_ACTIVITY_ID" VARCHAR(10 OCTETS) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECFLOAT(16) NOT NULL ,
		  "YEAR" DECFLOAT(16) NOT NULL ,
		  "FLAG1" VARCHAR(10 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(40 OCTETS) NOT NULL ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."CSTSTATUS_M"."ID" IS 'Unique Id acts as primary key' ;

CREATE INDEX "COMMON_USER"."CSTSTATUSM_STATVAL" ON "COMMON_USER"."CSTSTATUS_M"
		("STATUSVALUE" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;

CREATE INDEX "COMMON_USER"."IX25_CSTSTATUS_M" ON "COMMON_USER"."CSTSTATUS_M"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."CSTSTATUS_M"
	ADD CONSTRAINT "PK_CSTSTATUS_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."CSTSTATUS_M"
	ADD CONSTRAINT "UK_CSTSTATUS_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."CSTSTATUS_M" FOR TABLE "COMMON_USER"."CSTSTATUS_M" ;
CREATE ALIAS "DABS    "."CSTSTATUS_M" FOR TABLE "COMMON_USER"."CSTSTATUS_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_CSTSTATUS_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."CSTSTATUS_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.STATUS;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_CSTSTATUS_M"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."CSTSTATUS_M"
  REFERENCING
              OLD AS "OLD"
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	DECLARE CNT INTEGER;--

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.STATUS;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."CSTSTATUS_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."CSTSTATUS_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."CSTSTATUS_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."CSTSTATUS_M" TO USER "DB2INST1"  ;


-- COMMON_USER.EMAIL_HISTORY definition

CREATE TABLE "COMMON_USER"."EMAIL_HISTORY"  (
		  "ID" VARCHAR(50 OCTETS) NOT NULL ,
		  "SENDTO" VARCHAR(100 OCTETS) ,
		  "SUBJECT" VARCHAR(70 OCTETS) ,
		  "SENDDATE" TIMESTAMP(0) ,
		  "MESSAGE" VARCHAR(300 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(15 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP ,
		  "UPDATE_DATE" TIMESTAMP ,
		  "CREATED_BY" VARCHAR(10 OCTETS) ,
		  "UPDATED_BY" VARCHAR(10 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) ,
		  "PROVINCE" VARCHAR(5 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;
ALTER TABLE "COMMON_USER"."EMAIL_HISTORY"
	ADD CONSTRAINT "EMAIL_HISTORY_PK" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."EMAIL_HISTORY" FOR TABLE "COMMON_USER"."EMAIL_HISTORY" ;

GRANT SELECT ON TABLE "COMMON_USER"."EMAIL_HISTORY" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."EMAIL_HISTORY" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."EMAIL_HISTORY" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."EMAIL_HISTORY" TO USER "DB2INST1"  ;


-- COMMON_USER.LANG_DISP definition

CREATE TABLE "COMMON_USER"."LANG_DISP"  (
		  "ID" VARCHAR(10 OCTETS) NOT NULL ,
		  "LOCALE_ID" VARCHAR(10 OCTETS) NOT NULL ,
		  "ELEMENT_ID" VARCHAR(35 OCTETS) NOT NULL ,
		  "VALUE" VARCHAR(500 OCTETS) NOT NULL ,
		  "TYPE" VARCHAR(20 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP ,
		  "CREATED_BY" VARCHAR(10 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP ,
		  "UPDATE_BY" VARCHAR(10 OCTETS) ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" DECFLOAT(16) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "ENTITY" VARCHAR(20 OCTETS) NOT NULL ,
		  "DB_IP_ADDRESS" VARCHAR(15 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(60 OCTETS) NOT NULL )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

CREATE INDEX "COMMON_USER"."LANG_DISP_ELE" ON "COMMON_USER"."LANG_DISP"
		("ELEMENT_ID" ASC)
		PCTFREE 10 MINPCTUSED 10

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;

CREATE INDEX "COMMON_USER"."LANG_DISP_ENT" ON "COMMON_USER"."LANG_DISP"
		("ENTITY" ASC)
		PCTFREE 10 MINPCTUSED 10

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;

CREATE INDEX "COMMON_USER"."LANG_DISP_VAL" ON "COMMON_USER"."LANG_DISP"
		("VALUE" ASC)
		PCTFREE 10 MINPCTUSED 10

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."LANG_DISP"
	ADD CONSTRAINT "PK_LANG_DISP" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."LANG_DISP"
	ADD CONSTRAINT "UK_CSTREQUEST_T" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."LANG_DISP" FOR TABLE "COMMON_USER"."LANG_DISP" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_LANG_DISP"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."LANG_DISP"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

        IF (NEW.RECORD_STATUS='ACTIVE') THEN

                SET NEW.CHECK_CONDITION = NEW.LOCALE_ID||','||NEW.ELEMENT_ID||','||NEW.ENTITY;--

        ELSE

                SET NEW.CHECK_CONDITION = NEW.ID;--

        END IF;--

END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_LANG_DISP"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."LANG_DISP"
  REFERENCING
              OLD AS "OLD"
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

        DECLARE CNT INTEGER;--

        IF (NEW.RECORD_STATUS='ACTIVE') THEN

                SET NEW.CHECK_CONDITION = NEW.LOCALE_ID||','||NEW.ELEMENT_ID||','||NEW.ENTITY;--

        ELSE

                SET NEW.CHECK_CONDITION = NEW.ID;--

        END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."LANG_DISP" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."LANG_DISP" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."LANG_DISP" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."LANG_DISP" TO USER "DB2INST1"  ;


-- COMMON_USER.LTCATEGORY_TYPE_M definition

CREATE TABLE "COMMON_USER"."LTCATEGORY_TYPE_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "CAT_TYPE" VARCHAR(50 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(15 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECIMAL(2,0) NOT NULL ,
		  "YEAR" DECIMAL(4,0) NOT NULL ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(15 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(35 OCTETS) NOT NULL ,
		  "POS_REP" DECIMAL(6,3) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

ALTER TABLE "COMMON_USER"."LTCATEGORY_TYPE_M" PCTFREE 0 ;

COMMENT ON COLUMN "COMMON_USER"."LTCATEGORY_TYPE_M"."CAT_TYPE" IS 'Contains category type' ;

COMMENT ON COLUMN "COMMON_USER"."LTCATEGORY_TYPE_M"."ID" IS 'Unique Id acts as primary key' ;
ALTER TABLE "COMMON_USER"."LTCATEGORY_TYPE_M"
	ADD CONSTRAINT "PK_LTCATEGORY_TYPE_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."LTCATEGORY_TYPE_M"
	ADD CONSTRAINT "UK_LTCATEGORY_TYPE_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."LTCATEGORY_TYPE_M" FOR TABLE "COMMON_USER"."LTCATEGORY_TYPE_M" ;
CREATE ALIAS "DABS    "."LTCATEGORY_TYPE_M" FOR TABLE "CENTRAL_ALL"."LTCATEGORY_TYPE_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_LTCATEGORY_TYPE_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."LTCATEGORY_TYPE_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.CAT_TYPE;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."LTCATEGORY_TYPE_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."LTCATEGORY_TYPE_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."LTCATEGORY_TYPE_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."LTCATEGORY_TYPE_M" TO USER "DB2INST1"  ;


-- COMMON_USER.LTMTRSTATUS_M definition

CREATE TABLE "COMMON_USER"."LTMTRSTATUS_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "MTRSTATUS" VARCHAR(50 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(15 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECIMAL(2,0) NOT NULL ,
		  "YEAR" DECIMAL(4,0) NOT NULL ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(15 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(50 OCTETS) ,
		  "CODE" VARCHAR(5 OCTETS) ,
		  "BEHAVIOUR_ID" VARCHAR(15 OCTETS) NOT NULL ,
		  "GOVT_LETTER" VARCHAR(30 OCTETS) ,
		  "REMARKS" VARCHAR(30 OCTETS) ,
		  "BILL_BASIS" VARCHAR(10 OCTETS) ,
		  "STATUS_CODE" VARCHAR(3 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."LTMTRSTATUS_M"."BEHAVIOUR_ID" IS 'Contains Behaviour ID' ;

COMMENT ON COLUMN "COMMON_USER"."LTMTRSTATUS_M"."BILL_BASIS" IS 'Contains Bill Basis' ;

COMMENT ON COLUMN "COMMON_USER"."LTMTRSTATUS_M"."CODE" IS 'Contains Code' ;

COMMENT ON COLUMN "COMMON_USER"."LTMTRSTATUS_M"."GOVT_LETTER" IS 'Contains Government Letter' ;

COMMENT ON COLUMN "COMMON_USER"."LTMTRSTATUS_M"."ID" IS 'Unique Id acts as primary key' ;

COMMENT ON COLUMN "COMMON_USER"."LTMTRSTATUS_M"."MTRSTATUS" IS 'Contains Meter Status' ;

COMMENT ON COLUMN "COMMON_USER"."LTMTRSTATUS_M"."REMARKS" IS 'Contains Remarks if any' ;

CREATE INDEX "COMMON_USER"."IX145_LTMTRSTATUS_" ON "COMMON_USER"."LTMTRSTATUS_M"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."LTMTRSTATUS_M"
	ADD CONSTRAINT "PK_LTMTRSTATUS_M" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."LTMTRSTATUS_M" FOR TABLE "COMMON_USER"."LTMTRSTATUS_M" ;
CREATE ALIAS "DABS    "."LTMTRSTATUS_M" FOR TABLE "COMMON_USER"."LTMTRSTATUS_M" ;

GRANT SELECT ON TABLE "COMMON_USER"."LTMTRSTATUS_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."LTMTRSTATUS_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."LTMTRSTATUS_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."LTMTRSTATUS_M" TO USER "DB2INST1"  ;


-- COMMON_USER.LTPAYMENT_MODE_M definition

CREATE TABLE "COMMON_USER"."LTPAYMENT_MODE_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "PAYMENT_MODE" VARCHAR(50 OCTETS) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "MONTH" DECFLOAT(16) ,
		  "YEAR" DECFLOAT(16) ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(30 OCTETS) NOT NULL ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "CODE" DECIMAL(2,0) ,
		  "PAYMODE_STATUS" VARCHAR(10 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."LTPAYMENT_MODE_M"."CODE" IS 'Contains Code' ;

COMMENT ON COLUMN "COMMON_USER"."LTPAYMENT_MODE_M"."ID" IS 'Unique Id acts as primary key' ;

COMMENT ON COLUMN "COMMON_USER"."LTPAYMENT_MODE_M"."PAYMENT_MODE" IS 'Mode of Payment' ;

CREATE INDEX "COMMON_USER"."IX94_LTPAYMENT_MOD" ON "COMMON_USER"."LTPAYMENT_MODE_M"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."LTPAYMENT_MODE_M"
	ADD CONSTRAINT "PK_LTPAYMENT_MODE_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."LTPAYMENT_MODE_M"
	ADD CONSTRAINT "UK_LTPAYMENT_MODE_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."LTPAYMENT_MODE_M" FOR TABLE "COMMON_USER"."LTPAYMENT_MODE_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_LTPAYMENT_MODE_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."LTPAYMENT_MODE_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.PAYMENT_MODE;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_LTPAYMENT_MODE_M"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."LTPAYMENT_MODE_M"
  REFERENCING
              OLD AS "OLD"
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	DECLARE CNT INTEGER;--

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.PAYMENT_MODE;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."LTPAYMENT_MODE_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."LTPAYMENT_MODE_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."LTPAYMENT_MODE_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."LTPAYMENT_MODE_M" TO USER "DB2INST1"  ;


-- COMMON_USER.LTVOLTAGE_M definition

CREATE TABLE "COMMON_USER"."LTVOLTAGE_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "VOLT_GROUP" VARCHAR(10 OCTETS) NOT NULL ,
		  "VOLT_DESC" VARCHAR(100 OCTETS) ,
		  "VOLT_VALUE" DECIMAL(5,0) NOT NULL ,
		  "VOLT_UNIT" VARCHAR(20 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(15 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECIMAL(2,0) NOT NULL ,
		  "YEAR" DECIMAL(4,0) NOT NULL ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(15 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(100 OCTETS) NOT NULL )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."LTVOLTAGE_M"."ID" IS 'Unique Id acts as primary key' ;

COMMENT ON COLUMN "COMMON_USER"."LTVOLTAGE_M"."VOLT_DESC" IS 'Description about the Voltage' ;

COMMENT ON COLUMN "COMMON_USER"."LTVOLTAGE_M"."VOLT_GROUP" IS 'Voltage Group' ;

COMMENT ON COLUMN "COMMON_USER"."LTVOLTAGE_M"."VOLT_UNIT" IS 'Voltage Unit' ;

COMMENT ON COLUMN "COMMON_USER"."LTVOLTAGE_M"."VOLT_VALUE" IS 'Voltage value' ;

CREATE INDEX "COMMON_USER"."IX179_LTVOLTAGE_M" ON "COMMON_USER"."LTVOLTAGE_M"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."LTVOLTAGE_M"
	ADD CONSTRAINT "PK_LTVOLTAGE_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."LTVOLTAGE_M"
	ADD CONSTRAINT "UK_LTVOLTAGE_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."LTVOLTAGE_M" FOR TABLE "COMMON_USER"."LTVOLTAGE_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_LTVOLTAGE_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."LTVOLTAGE_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC
	IF (NEW.RECORD_STATUS='ACTIVE') THEN
		SET NEW.CHECK_CONDITION = NEW.VOLT_DESC||','||NEW.VOLT_GROUP||','||NEW.VOLT_UNIT;--
	ELSE
		SET NEW.CHECK_CONDITION = NEW.ID;--
	END IF;--
END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_LTVOLTAGE_M"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."LTVOLTAGE_M"
  REFERENCING
              OLD AS "OLD"
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC
	DECLARE CNT INTEGER;--
	IF (NEW.RECORD_STATUS='ACTIVE') THEN
		SET NEW.CHECK_CONDITION = NEW.VOLT_DESC||','||NEW.VOLT_GROUP||','||NEW.VOLT_UNIT;--
	ELSE
		SET NEW.CHECK_CONDITION = NEW.ID;--
	END IF;--
END ;

GRANT SELECT ON TABLE "COMMON_USER"."LTVOLTAGE_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."LTVOLTAGE_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."LTVOLTAGE_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."LTVOLTAGE_M" TO USER "DB2INST1"  ;


-- COMMON_USER.LT_NUM_GEN definition

CREATE TABLE "COMMON_USER"."LT_NUM_GEN"  (
		  "ID" VARCHAR(20 OCTETS) NOT NULL ,
		  "NUM_ID" VARCHAR(20 OCTETS) ,
		  "MODULE" VARCHAR(20 OCTETS) ,
		  "TYPE" VARCHAR(30 OCTETS) ,
		  "GENCODE" VARCHAR(100 OCTETS) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "FLAG1" VARCHAR(5 OCTETS) ,
		  "FLAG2" VARCHAR(5 OCTETS) ,
		  "FLAG3" VARCHAR(5 OCTETS) ,
		  "FLAG4" VARCHAR(5 OCTETS) ,
		  "FLAG5" VARCHAR(5 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(2,0) ,
		  "CHECK_CONDITION" VARCHAR(20 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(20 OCTETS) ,
		  "PREFIX" VARCHAR(5 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;
ALTER TABLE "COMMON_USER"."LT_NUM_GEN"
	ADD CONSTRAINT "LT_NUM_GEN_PK" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."LT_NUM_GEN" FOR TABLE "COMMON_USER"."LT_NUM_GEN" ;
CREATE ALIAS "DABS    "."LT_NUM_GEN" FOR TABLE "CENTRAL_ALL"."LT_NUM_GEN" ;

GRANT SELECT ON TABLE "COMMON_USER"."LT_NUM_GEN" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."LT_NUM_GEN" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."LT_NUM_GEN" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."LT_NUM_GEN" TO USER "DB2INST1"  ;


-- COMMON_USER.MESSAGE_HISTORY definition

CREATE TABLE "COMMON_USER"."MESSAGE_HISTORY"  (
		  "ID" VARCHAR(15 OCTETS) NOT NULL ,
		  "MESSAGE_ID" VARCHAR(15 OCTETS) NOT NULL ,
		  "SENDER" VARCHAR(15 OCTETS) ,
		  "RECEIVER" VARCHAR(100 OCTETS) ,
		  "HOURS" VARCHAR(10 OCTETS) ,
		  "MIN" VARCHAR(10 OCTETS) ,
		  "SEC" VARCHAR(10 OCTETS) ,
		  "TYPE" VARCHAR(10 OCTETS) ,
		  "CONS_NUM" VARCHAR(10 OCTETS) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP ,
		  "CHECK_CONDITION" VARCHAR(25 OCTETS) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(15 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "MSG_TYPE" VARCHAR(8 OCTETS) ,
		  "BILL_NO" VARCHAR(25 OCTETS) ,
		  "BILL_UNITS" VARCHAR(8 OCTETS) ,
		  "TOTAL_AMOUNT" DECIMAL(15,2) ,
		  "DHARI_YEAR" VARCHAR(4 OCTETS) ,
		  "CYCLE" VARCHAR(2 OCTETS) ,
		  "VENDOR" VARCHAR(10 OCTETS) ,
		  "MSGTEXT" VARCHAR(500 OCTETS) ,
		  "ACTIVATIONCODE" VARCHAR(15 OCTETS) ,
		  "REGISTARTIONCODE" VARCHAR(25 OCTETS) ,
		  "COUNTERFLAG" VARCHAR(2 OCTETS) ,
		  "FLAGAC" VARCHAR(2 OCTETS) )
		 IN "USERSPACE1"
		 ORGANIZE BY ROW  ;
ALTER TABLE "COMMON_USER"."MESSAGE_HISTORY"
	ADD CONSTRAINT "MESSAGE_HISTORY_PK" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."MESSAGE_HISTORY" FOR TABLE "COMMON_USER"."MESSAGE_HISTORY" ;

GRANT SELECT ON TABLE "COMMON_USER"."MESSAGE_HISTORY" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."MESSAGE_HISTORY" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."MESSAGE_HISTORY" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."MESSAGE_HISTORY" TO USER "DB2INST1"  ;


-- COMMON_USER.MTR_CAPACITOR_M definition

CREATE TABLE "COMMON_USER"."MTR_CAPACITOR_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "CAPACITY" VARCHAR(25 OCTETS) NOT NULL ,
		  "MIN_CAPACITY" DECIMAL(10,4) NOT NULL ,
		  "MAX_CAPACITY" DECIMAL(10,4) NOT NULL ,
		  "REMARKS" VARCHAR(100 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(15 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECIMAL(2,0) NOT NULL ,
		  "YEAR" DECIMAL(4,0) NOT NULL ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(15 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(50 OCTETS) NOT NULL )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."MTR_CAPACITOR_M"."CAPACITY" IS 'Capacity of the Meter' ;

COMMENT ON COLUMN "COMMON_USER"."MTR_CAPACITOR_M"."ID" IS 'Unique Id acts as primary key' ;

COMMENT ON COLUMN "COMMON_USER"."MTR_CAPACITOR_M"."MAX_CAPACITY" IS 'Maximum Capacity of the meter' ;

COMMENT ON COLUMN "COMMON_USER"."MTR_CAPACITOR_M"."MIN_CAPACITY" IS 'Minimum Capacity of the meter' ;

COMMENT ON COLUMN "COMMON_USER"."MTR_CAPACITOR_M"."REMARKS" IS 'Contains Remarks if any' ;

CREATE INDEX "COMMON_USER"."IX102_MTR_CAPACITO" ON "COMMON_USER"."MTR_CAPACITOR_M"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."MTR_CAPACITOR_M"
	ADD CONSTRAINT "PK_MTR_CAPACITOR_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."MTR_CAPACITOR_M"
	ADD CONSTRAINT "UK_MTR_CAPACITOR_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."MTR_CAPACITOR_M" FOR TABLE "COMMON_USER"."MTR_CAPACITOR_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_MTR_CAPACITOR_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."MTR_CAPACITOR_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

        IF (NEW.RECORD_STATUS='ACTIVE') THEN

                SET NEW.CHECK_CONDITION = NEW.CAPACITY ||','|| NEW.MIN_CAPACITY ||','|| NEW.MAX_CAPACITY;--

        ELSE

                SET NEW.CHECK_CONDITION = NEW.ID;--

        END IF;--

END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_MTR_CAPACITOR_M"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."MTR_CAPACITOR_M"
  REFERENCING
              OLD AS "OLD"
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

        DECLARE CNT INTEGER;--

        IF (NEW.RECORD_STATUS='ACTIVE') THEN

                SET NEW.CHECK_CONDITION = NEW.CAPACITY ||','|| NEW.MIN_CAPACITY ||','|| NEW.MAX_CAPACITY;--

        ELSE

                SET NEW.CHECK_CONDITION = NEW.ID;--

        END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."MTR_CAPACITOR_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."MTR_CAPACITOR_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."MTR_CAPACITOR_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."MTR_CAPACITOR_M" TO USER "DB2INST1"  ;


-- COMMON_USER.MTR_MAKEM definition

CREATE TABLE "COMMON_USER"."MTR_MAKEM"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "MAKE" VARCHAR(30 OCTETS) NOT NULL ,
		  "REMARKS" VARCHAR(100 OCTETS) ,
		  "CREATED_BY" VARCHAR(15 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECIMAL(2,0) NOT NULL ,
		  "YEAR" DECIMAL(4,0) NOT NULL ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(15 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(50 OCTETS) NOT NULL )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."MTR_MAKEM"."ID" IS 'Unique Id acts as primary key' ;

CREATE INDEX "COMMON_USER"."IX105_MTR_MAKEM" ON "COMMON_USER"."MTR_MAKEM"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."MTR_MAKEM"
	ADD CONSTRAINT "PK_MTR_MAKEM" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."MTR_MAKEM" FOR TABLE "COMMON_USER"."MTR_MAKEM" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_MTR_MAKEM"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."MTR_MAKEM"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

        IF (NEW.RECORD_STATUS='ACTIVE') THEN

                SET NEW.CHECK_CONDITION = NEW.MAKE;--

        ELSE

                SET NEW.CHECK_CONDITION = NEW.ID;--

        END IF;--

END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_MTR_MAKEM"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."MTR_MAKEM"
  REFERENCING
              OLD AS "OLD"
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

        DECLARE CNT INTEGER;--

        IF (NEW.RECORD_STATUS='ACTIVE') THEN

                SET NEW.CHECK_CONDITION = NEW.MAKE;--

        ELSE

                SET NEW.CHECK_CONDITION = NEW.ID;--

        END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."MTR_MAKEM" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."MTR_MAKEM" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."MTR_MAKEM" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."MTR_MAKEM" TO USER "DB2INST1"  ;


-- COMMON_USER.MTR_TYPEM definition

CREATE TABLE "COMMON_USER"."MTR_TYPEM"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "TYPE" VARCHAR(25 OCTETS) NOT NULL ,
		  "REMARKS" VARCHAR(100 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(15 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECIMAL(2,0) NOT NULL ,
		  "YEAR" DECIMAL(4,0) NOT NULL ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(15 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(20 OCTETS) ,
		  "MODULE_TYPE" VARCHAR(10 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."MTR_TYPEM"."ID" IS 'Unique Id acts as primary key' ;

COMMENT ON COLUMN "COMMON_USER"."MTR_TYPEM"."REMARKS" IS 'Contains Remarks if any' ;

COMMENT ON COLUMN "COMMON_USER"."MTR_TYPEM"."TYPE" IS 'Type of Meter' ;

CREATE INDEX "COMMON_USER"."IX188_MTR_TYPEM" ON "COMMON_USER"."MTR_TYPEM"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."MTR_TYPEM"
	ADD CONSTRAINT "PK_MTR_TYPEM" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."MTR_TYPEM" FOR TABLE "COMMON_USER"."MTR_TYPEM" ;

GRANT SELECT ON TABLE "COMMON_USER"."MTR_TYPEM" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."MTR_TYPEM" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."MTR_TYPEM" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."MTR_TYPEM" TO USER "DB2INST1"  ;


-- COMMON_USER.MTS_MTR_RDR_M definition

CREATE TABLE "COMMON_USER"."MTS_MTR_RDR_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "MTR_RDR_NO" VARCHAR(10 OCTETS) NOT NULL ,
		  "MTR_RDR_NAME" VARCHAR(30 OCTETS) ,
		  "RDR_ADDRESS" VARCHAR(35 OCTETS) ,
		  "OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "CHECK_CONDITION" VARCHAR(50 OCTETS) NOT NULL ,
		  "FLAG1" VARCHAR(5 OCTETS) ,
		  "FLAG2" VARCHAR(5 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) ,
		  "PHONE_NO" VARCHAR(30 OCTETS) ,
		  "IMEI" VARCHAR(16 OCTETS) ,
		  "APPROVAL_STATUS" VARCHAR(10 OCTETS) ,
		  "OLD_MTRRDR_NO" VARCHAR(10 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

CREATE INDEX "CENTRAL_ALL"."RDR_OFFICEID" ON "COMMON_USER"."MTS_MTR_RDR_M"
		("OFFICE_ID" ASC)

		COLLECT SAMPLED DETAILED STATISTICS
		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;

CREATE INDEX "COMMON_USER"."IX91_MTS_MTR_RDR_M" ON "COMMON_USER"."MTS_MTR_RDR_M"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."MTS_MTR_RDR_M"
	ADD CONSTRAINT "PK_MTS_MTR_RDR_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."MTS_MTR_RDR_M"
	ADD CONSTRAINT "MTR_RDR_NO_UK" UNIQUE
		("MTR_RDR_NO")
	NOT ENFORCED ;
CREATE ALIAS "CENTRAL_ALL"."MTS_MTR_RDR_M" FOR TABLE "COMMON_USER"."MTS_MTR_RDR_M" ;
CREATE VIEW DABS.MTS_MTR_RDR_M AS
SELECT * FROM CENTRAL_ALL.MTS_MTR_RDR_M A WHERE EXISTS (SELECT 1 FROM DABS.CMTOFFICE_M WHERE ID=A.OFFICE_ID) ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_MTS_MTR_RDR_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."MTS_MTR_RDR_M"
  REFERENCING
    NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

        IF (NEW.RECORD_STATUS='ACTIVE') THEN

                SET NEW.CHECK_CONDITION = NEW.MTR_RDR_NO||','||NEW.OFFICE_ID;--

        ELSE

                SET NEW.CHECK_CONDITION = NEW.ID;--

        END IF;--

END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_MTS_MTR_RDR_M"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."MTS_MTR_RDR_M"
  REFERENCING
    OLD AS "OLD"
    NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

        DECLARE CNT INTEGER;--

        IF (NEW.RECORD_STATUS='ACTIVE') THEN

                SET NEW.CHECK_CONDITION = NEW.MTR_RDR_NO||','||NEW.OFFICE_ID;--

        ELSE

                SET NEW.CHECK_CONDITION = NEW.ID;--

        END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."MTS_MTR_RDR_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."MTS_MTR_RDR_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."MTS_MTR_RDR_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."MTS_MTR_RDR_M" TO USER "DB2INST1"  ;


-- COMMON_USER.NCTAPPLIANCE_M definition

CREATE TABLE "COMMON_USER"."NCTAPPLIANCE_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "NAME" VARCHAR(100 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(20 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP NOT NULL ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECFLOAT(16) NOT NULL ,
		  "YEAR" DECFLOAT(16) NOT NULL ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(100 OCTETS) NOT NULL ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "CATEGORY_FLAG" VARCHAR(1 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

ALTER TABLE "COMMON_USER"."NCTAPPLIANCE_M" PCTFREE 0 ;

COMMENT ON COLUMN "COMMON_USER"."NCTAPPLIANCE_M"."ID" IS 'Unique Id acts as primary key' ;
ALTER TABLE "COMMON_USER"."NCTAPPLIANCE_M"
	ADD CONSTRAINT "PK_NCTAPPLIANCE_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."NCTAPPLIANCE_M"
	ADD CONSTRAINT "UK_NCTAPPLIANCE_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."NCTAPPLIANCE_M" FOR TABLE "COMMON_USER"."NCTAPPLIANCE_M" ;
CREATE  TRIGGER COMMON_USER.TRIG_BRIN_NCTAPPLIANCE_M
  NO CASCADE BEFORE INSERT
  ON COMMON_USER.NCTAPPLIANCE_M
  REFERENCING
    NEW AS NEW
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.NAME;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTAPPLIANCE_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTAPPLIANCE_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTAPPLIANCE_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."NCTAPPLIANCE_M" TO USER "DB2INST1"  ;


-- COMMON_USER.NCTCATEGORY_M definition

CREATE TABLE "COMMON_USER"."NCTCATEGORY_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "NAME" VARCHAR(50 OCTETS) ,
		  "TYPE" VARCHAR(15 OCTETS) NOT NULL ,
		  "PARENT" VARCHAR(15 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(15 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECIMAL(2,0) NOT NULL ,
		  "YEAR" DECIMAL(4,0) NOT NULL ,
		  "FLAG1" VARCHAR(50 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(20 OCTETS) ,
		  "MODULE_ID" VARCHAR(15 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "HIERARCHY" VARCHAR(15 OCTETS) ,
		  "SERVICE_LEVEL" DECIMAL(15,0) ,
		  "REGISTRATION_FEE" DECIMAL(15,2) ,
		  "INSPECTION_DURATION" DECIMAL(15,0) ,
		  "CHECK_CONDITION" VARCHAR(100 OCTETS) NOT NULL ,
		  "CAT_CODE" VARCHAR(15 OCTETS) ,
		  "CMD_LIMIT" DECIMAL(10,0) ,
		  "SEASONAL_FLAG" VARCHAR(10 OCTETS) ,
		  "VOLT_GRP" VARCHAR(20 OCTETS) ,
		  "POS_REP" DECIMAL(6,3) ,
		  "MAXLIMIT" DECIMAL(10,0) ,
		  "MINLIMIT" DECIMAL(10,0) ,
		  "METRIC" VARCHAR(10 OCTETS) ,
		  "NO_CHK_BOUNCES" DECIMAL(15,0) ,
		  "GOVT_REF_NO" VARCHAR(30 OCTETS) ,
		  "REMARKS" VARCHAR(40 OCTETS) ,
		  "IS_METER_REQUIRED" VARCHAR(10 OCTETS) ,
		  "LOAD_TYPE" VARCHAR(10 OCTETS) ,
		  "GRP" VARCHAR(1 OCTETS) ,
		  "CODE" VARCHAR(5 OCTETS) ,
		  "CHECK_CONDITION1" VARCHAR(10 OCTETS) ,
		  "DIVERSITY_FACTOR" VARCHAR(5 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

ALTER TABLE "COMMON_USER"."NCTCATEGORY_M" PCTFREE 0 ;
ALTER TABLE "COMMON_USER"."NCTCATEGORY_M"
	ADD CONSTRAINT "NCTCATEGORY_M_PK" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."NCTCATEGORY_M"
	ADD CONSTRAINT "UK_NCTCATEGORY_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."NCTCATEGORY_M" FOR TABLE "COMMON_USER"."NCTCATEGORY_M" ;
CREATE VIEW DABS.NCTCATEGORY_M  AS  (SELECT * FROM COMMON_USER.NCTCATEGORY_M
WHERE PARENT ='-2'  UNION  SELECT * FROM COMMON_USER.NCTCATEGORY_M WHERE
ID IN (SELECT CATEGORY_ID FROM CENTRAL_ALL.LTTARIFF_PARA_T WHERE PROVIENCE='200')) ;
CREATE VIEW CENTRAL_ALL.ZONE_OFFICE_CATEGORY_RELATION  AS  SELECT
DISTINCT ID, KED, ZONE, ZONE_ID, JUNCTION, JUNCTION_ID, CATEGORY, CATEGORY_ID,
PARENT_OFFICEID, RECORD_STATUS, CHECK_CONDITION, CREATE_DATE, UPDATE_DATE,
NAME,  COMM_ID, PARENT, PRIORITY,CYCLE_CYEAR,CYCLE,BILLMODE     FROM  (
   SELECT ID, KED, ZONE_NAME ZONE,ZONE_ID,junction_name JUNCTION,JUNCTION_ID,
category_name CATEGORY,CATEGORY_ID,PARENT_ID PARENT_OFFICEID,'ACTIVE' AS
RECORD_STATUS,NULL AS CHECK_CONDITION,NULL AS CREATE_DATE,NULL AS UPDATE_DATE,
NAME,COMM_ID, PARENT,PRIORITY,CYCLE_CYEAR,CYCLE,BILLMODE     FROM (
 SELECT DISTINCT B.ID AS ID,B.NAME AS KED,B.PARENTOFFICE_ID AS PARENT_ID,NULL
AS ZONE_ID,NULL AS ZONE_NAME,NULL AS JUNCTION_ID, NULL AS junction_name,NULL
AS CATEGORY_ID, NULL AS category_name,B.NAME as NAME,B.ID as COMM_ID,B.PARENTOFFICE_ID
AS PARENT,'A' AS PRIORITY,'--' AS CYCLE_CYEAR,'-' AS CYCLE,0  AS BILLMODE     FROM CENTRAL_ALL.CMTOFFICE_M A,CENTRAL_ALL.CMTOFFICE_M B     WHERE A.RECORD_STATUS='ACTIVE' AND B.RECORD_STATUS='ACTIVE' AND A.PARENTOFFICE_ID=B.ID AND B.ID='246'     UNION ALL     SELECT DISTINCT B.ID AS ID,B.NAME AS KED,B.PARENTOFFICE_ID AS PARENT_ID,NULL AS ZONE_ID,NULL AS ZONE_NAME,NULL AS JUNCTION_ID, NULL AS junction_name,NULL AS CATEGORY_ID, NULL AS category_name,B.NAME as NAME,B.ID as COMM_ID,B.PARENTOFFICE_ID AS PARENT,'K' AS PRIORITY,'--' AS CYCLE_CYEAR,'-' AS CYCLE,0  AS BILLMODE     FROM CENTRAL_ALL.CMTOFFICE_M A,CENTRAL_ALL.CMTOFFICE_M B     WHERE A.RECORD_STATUS='ACTIVE' AND B.RECORD_STATUS='ACTIVE' AND A.PARENTOFFICE_ID=B.ID AND B.ID<>'246'     UNION ALL     SELECT DISTINCT D.ID,E.NAME AS KED,E.ID AS PARENT_ID,D.ID AS ZONE_ID,D.NAME AS ZONE_NAME, NULL AS JUNCTION_ID,NULL AS JUNCTION_NAME,NULL AS CATEGORY_ID,NULL AS CATEGORY_NAME,D.NAME AS NAME,D.ID AS COMM_ID,E.ID AS PARENT, 'Z' AS PRIORITY,F.CYCLE_YEAR_DHARI AS CYCLE_CYEAR,F.CYCLE_CODE,F.BILLMODE AS BILLMODE     FROM CENTRAL_ALL.CMTOFFICE_M A,CENTRAL_ALL.ZONE_OFFICE_REL_M B,CENTRAL_ALL.ZONE_TARIFF_REL_CONGIF_M C,CENTRAL_ALL.ZONECYCLE_CONFIG_M D,CENTRAL_ALL.CMTOFFICE_M E,CENTRAL_ALL.ZONE_CYCLE_REL_M F     WHERE A.ID=B.OFFICE_ID AND B.ZONE_ID=C.ZONE_ID AND B.ZONE_ID=D.ID AND A.PARENTOFFICE_ID=E.ID AND A.RECORD_STATUS='ACTIVE' AND B.RECORD_STATUS='ACTIVE' AND C.RECORD_STATUS='ACTIVE' AND D.RECORD_STATUS='ACTIVE' AND E.RECORD_STATUS='ACTIVE' AND F.RECORD_STATUS='ACTIVE'  AND B.ZONE_ID=F.ZONE_ID AND TRUNC(SYSDATE) BETWEEN TRUNC(F.START_DATE) AND (F.FINAL_DATE) AND F.ACTIVITY='1000-2' AND B.ID<>'246'     UNION ALL     SELECT DISTINCT A.ID||D.ID AS ID,E.NAME AS KED,D.ID AS PARENT_ID,D.ID AS ZONE_ID,D.NAME AS ZONE_NAME, A.ID AS JUNCTION_ID,A.NAME AS JUNCTION_NAME,NULL AS CATEGORY_ID,NULL AS CATEGORY_NAME,A.NAME AS NAME,A.ID AS COMM_ID,D.ID AS PARENT, 'J' AS PRIORITY,'--' AS CYCLE_CYEAR,'-' AS CYCLE,0  AS BILLMODE     FROM CENTRAL_ALL.CMTOFFICE_M A,CENTRAL_ALL.ZONE_OFFICE_REL_M B,CENTRAL_ALL.ZONE_TARIFF_REL_CONGIF_M C,CENTRAL_ALL.ZONECYCLE_CONFIG_M D,CENTRAL_ALL.CMTOFFICE_M E     WHERE A.ID=B.OFFICE_ID AND B.ZONE_ID=C.ZONE_ID AND B.ZONE_ID=D.ID AND A.PARENTOFFICE_ID=E.ID AND A.RECORD_STATUS='ACTIVE' AND B.RECORD_STATUS='ACTIVE' AND C.RECORD_STATUS='ACTIVE' AND D.RECORD_STATUS='ACTIVE' AND E.RECORD_STATUS='ACTIVE' AND B.ID<>'246'     UNION ALL     SELECT DISTINCT A.ID||D.ID||C.CATEGORY_ID AS ID,E.NAME AS KED,A.ID||D.ID AS PARENT_ID,D.ID AS ZONE_ID,D.NAME AS ZONE_NAME, A.ID AS JUNCTION_ID,A.NAME AS JUNCTION_NAME,CATEGORY_ID AS CATEGORY_ID,(    SELECT NAME     FROM CENTRAL_ALL.NCTCATEGORY_M     WHERE ID=C.CATEGORY_ID) AS CATEGORY_NAME, (    SELECT REPLACE(NAME,'_',' ')     FROM CENTRAL_ALL.NCTCATEGORY_M     WHERE ID=C.CATEGORY_ID) AS NAME,C.CATEGORY_ID AS COMM_ID,A.ID AS PARENT, 'C' AS PRIORITY,'--' AS CYCLE_CYEAR,'-' AS CYCLE,0  AS BILLMODE     FROM CENTRAL_ALL.CMTOFFICE_M A,CENTRAL_ALL.ZONE_OFFICE_REL_M B,CENTRAL_ALL.ZONE_TARIFF_REL_CONGIF_M C,CENTRAL_ALL.ZONECYCLE_CONFIG_M D,CENTRAL_ALL.CMTOFFICE_M E     WHERE A.ID=B.OFFICE_ID AND B.ZONE_ID=C.ZONE_ID AND B.ZONE_ID=D.ID AND A.PARENTOFFICE_ID=E.ID AND A.RECORD_STATUS='ACTIVE' AND B.RECORD_STATUS='ACTIVE' AND C.RECORD_STATUS='ACTIVE' AND D.RECORD_STATUS='ACTIVE' AND E.RECORD_STATUS='ACTIVE' AND B.ID<>'246' )  ORDER BY TO_NUMBER(DECODE(PRIORITY,'A','1','K','2','Z','3','J','4','C','5')))  WITH NO ROW MOVEMENT
 ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_NCTCATEGORY_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."NCTCATEGORY_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.NAME||','||NEW.TYPE||','||NEW.PARENT;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTCATEGORY_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTCATEGORY_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTCATEGORY_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."NCTCATEGORY_M" TO USER "DB2INST1"  ;


-- COMMON_USER.NCTDOCUMENT_M definition

CREATE TABLE "COMMON_USER"."NCTDOCUMENT_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "NAME" VARCHAR(300 OCTETS) NOT NULL ,
		  "CREATED_BY" VARCHAR(20 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECFLOAT(16) NOT NULL ,
		  "YEAR" DECFLOAT(16) NOT NULL ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(300 OCTETS) NOT NULL ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."NCTDOCUMENT_M"."ID" IS 'Unique Id acts as primary key' ;

CREATE INDEX "COMMON_USER"."IX130_NCTDOCUMENT_" ON "COMMON_USER"."NCTDOCUMENT_M"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;

CREATE UNIQUE INDEX "COMMON_USER"."UQ129_NCTDOCUMENT_" ON "COMMON_USER"."NCTDOCUMENT_M"
		("NAME" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."NCTDOCUMENT_M"
	ADD CONSTRAINT "PK_NCTDOCUMENT_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."NCTDOCUMENT_M"
	ADD CONSTRAINT "UK_NCTDOCUMENT_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."NCTDOCUMENT_M" FOR TABLE "COMMON_USER"."NCTDOCUMENT_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_NCTDOCUMENT_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."NCTDOCUMENT_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.NAME;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTDOCUMENT_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTDOCUMENT_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTDOCUMENT_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."NCTDOCUMENT_M" TO USER "DB2INST1"  ;


-- COMMON_USER.NCTMETRIC_M definition

CREATE TABLE "COMMON_USER"."NCTMETRIC_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "METRIC" VARCHAR(10 OCTETS) NOT NULL ,
		  "MAXLIMIT" DECIMAL(10,0) ,
		  "MINLIMIT" DECIMAL(5,0) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECFLOAT(16) NOT NULL ,
		  "YEAR" DECFLOAT(16) NOT NULL ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(35 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."NCTMETRIC_M"."ID" IS 'Unique Id acts as primary key' ;

CREATE INDEX "COMMON_USER"."IX148_NCTMETRIC_M" ON "COMMON_USER"."NCTMETRIC_M"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;

CREATE UNIQUE INDEX "COMMON_USER"."UQ146_NCTMETRIC_M" ON "COMMON_USER"."NCTMETRIC_M"
		("METRIC" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."NCTMETRIC_M"
	ADD CONSTRAINT "PK_NCTMETRIC_M" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."NCTMETRIC_M" FOR TABLE "COMMON_USER"."NCTMETRIC_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_NCTMETRIC_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."NCTMETRIC_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.METRIC||','||NEW.MAXLIMIT||','||NEW.MINLIMIT;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_NCTMETRIC_M"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."NCTMETRIC_M"
  REFERENCING
              OLD AS "OLD"
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	DECLARE CNT INTEGER;--

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.METRIC||','||NEW.MAXLIMIT||','||NEW.MINLIMIT;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTMETRIC_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTMETRIC_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTMETRIC_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."NCTMETRIC_M" TO USER "DB2INST1"  ;


-- COMMON_USER.NEPAL_CALENDAR definition

CREATE TABLE "COMMON_USER"."NEPAL_CALENDAR"  (
		  "NDATE" VARCHAR(15 OCTETS) ,
		  "EDATE" TIMESTAMP(0) ,
		  "HOLIDAY" DECIMAL(2,0) ,
		  "DESCRIPTION" VARCHAR(50 OCTETS) ,
		  "NMONTH" DECIMAL(2,0) ,
		  "NYEAR" DECIMAL(4,0) ,
		  "NDT" VARCHAR(10 OCTETS) ,
		  "CREATED_BY" VARCHAR(15 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

CREATE INDEX "COMMON_USER"."IDX_NDT" ON "COMMON_USER"."NEPAL_CALENDAR"
		("NDT" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;

CREATE UNIQUE INDEX "COMMON_USER"."UQ215_NEPAL_CALEND" ON "COMMON_USER"."NEPAL_CALENDAR"
		("EDATE" ASC,
		 "NDATE" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
CREATE ALIAS "CENTRAL_ALL"."NEPAL_CALENDAR" FOR TABLE "COMMON_USER"."NEPAL_CALENDAR" ;

GRANT SELECT ON TABLE "COMMON_USER"."NEPAL_CALENDAR" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."NEPAL_CALENDAR" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."NEPAL_CALENDAR" TO USER "READUSER"  ;

GRANT SELECT ON TABLE "COMMON_USER"."NEPAL_CALENDAR" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."NEPAL_CALENDAR" TO USER "DB2INST1"  ;


-- COMMON_USER.NEPAL_DATE definition

CREATE TABLE "COMMON_USER"."NEPAL_DATE"  (
		  "ID" VARCHAR(15 OCTETS) NOT NULL ,
		  "MONTH_ID" VARCHAR(2 OCTETS) ,
		  "DAYS" DECIMAL(2,0) ,
		  "ENGLISH_START_DATE" TIMESTAMP(0) ,
		  "NEPAL_YEAR" DECIMAL(4,0) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "CHECK_CONDITION" VARCHAR(25 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(20 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;
ALTER TABLE "COMMON_USER"."NEPAL_DATE"
	ADD CONSTRAINT "NEPAL_DATE_PK" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."NEPAL_DATE" FOR TABLE "COMMON_USER"."NEPAL_DATE" ;

GRANT SELECT ON TABLE "COMMON_USER"."NEPAL_DATE" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."NEPAL_DATE" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."NEPAL_DATE" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."NEPAL_DATE" TO USER "DB2INST1"  ;


-- COMMON_USER.NEPAL_MONTH definition

CREATE TABLE "COMMON_USER"."NEPAL_MONTH"  (
		  "ID" VARCHAR(15 OCTETS) NOT NULL ,
		  "MONTH_NAME" VARCHAR(15 OCTETS) ,
		  "MONTH_ORDER" DECIMAL(2,0) ,
		  "MON_SHORT" VARCHAR(3 OCTETS) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "CHECK_CONDITION" VARCHAR(25 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(20 OCTETS) ,
		  "UNICODEMONTH" VARCHAR(20 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;
ALTER TABLE "COMMON_USER"."NEPAL_MONTH"
	ADD CONSTRAINT "NEPAL_MONTH_PK" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."NEPAL_MONTH" FOR TABLE "COMMON_USER"."NEPAL_MONTH" ;

GRANT SELECT ON TABLE "COMMON_USER"."NEPAL_MONTH" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."NEPAL_MONTH" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."NEPAL_MONTH" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."NEPAL_MONTH" TO USER "DB2INST1"  ;


-- COMMON_USER.SMS_CONFIG definition

CREATE TABLE "COMMON_USER"."SMS_CONFIG"  (
		  "ID" VARCHAR(20 OCTETS) NOT NULL ,
		  "TEXT" VARCHAR(500 OCTETS) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(4 OCTETS) ,
		  "FLAG3" VARCHAR(4 OCTETS) ,
		  "FLAG4" VARCHAR(4 OCTETS) ,
		  "FLAG5" VARCHAR(4 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "CHECK_CONDITION" VARCHAR(25 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(25 OCTETS) ,
		  "IS_DISPLAY" VARCHAR(2 OCTETS) ,
		  "MODULE_TYPE" VARCHAR(50 OCTETS) ,
		  "EMAIL_TEXT" VARCHAR(200 OCTETS) ,
		  "IS_EMAIL_DISPLAY" VARCHAR(1 OCTETS) ,
		  "LOCALE_ID" VARCHAR(10 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;
ALTER TABLE "COMMON_USER"."SMS_CONFIG"
	ADD CONSTRAINT "SMS_CONFIG_PK" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."SMS_CONFIG" FOR TABLE "COMMON_USER"."SMS_CONFIG" ;

GRANT SELECT ON TABLE "COMMON_USER"."SMS_CONFIG" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."SMS_CONFIG" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."SMS_CONFIG" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."SMS_CONFIG" TO USER "DB2INST1"  ;


-- COMMON_USER.STR_CATEGORY definition

CREATE TABLE "COMMON_USER"."STR_CATEGORY"  (
		  "ID" VARCHAR(20 OCTETS) NOT NULL ,
		  "CATEGORYNAME" VARCHAR(64 OCTETS) ,
		  "SUBCATEGORYID" VARCHAR(50 OCTETS) ,
		  "SUBCATEGORYNAME" VARCHAR(64 OCTETS) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECIMAL(2,0) NOT NULL ,
		  "YEAR" DECIMAL(4,0) NOT NULL ,
		  "FLAG1" VARCHAR(3 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(50 OCTETS) ,
		  "CATEGORYID" VARCHAR(50 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."STR_CATEGORY"."SUBCATEGORYID" IS 'PARENT' ;

CREATE INDEX "COMMON_USER"."IX164_STR_CATEGORY" ON "COMMON_USER"."STR_CATEGORY"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."STR_CATEGORY"
	ADD CONSTRAINT "STR_CATEGORY_PK" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."STR_CATEGORY" FOR TABLE "COMMON_USER"."STR_CATEGORY" ;

GRANT SELECT ON TABLE "COMMON_USER"."STR_CATEGORY" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."STR_CATEGORY" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."STR_CATEGORY" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."STR_CATEGORY" TO USER "DB2INST1"  ;


-- COMMON_USER.STR_ITEMLIST definition

CREATE TABLE "COMMON_USER"."STR_ITEMLIST"  (
		  "ID" VARCHAR(20 OCTETS) NOT NULL ,
		  "CATEGORYID" VARCHAR(20 OCTETS) ,
		  "SUBCATEGORYID" VARCHAR(20 OCTETS) ,
		  "ITEMNAME" VARCHAR(100 OCTETS) ,
		  "UNITS" VARCHAR(20 OCTETS) ,
		  "AVAIL_QUANTITY" VARCHAR(25 OCTETS) ,
		  "RATE" VARCHAR(25 OCTETS) ,
		  "STOREKEEPERID" VARCHAR(60 OCTETS) ,
		  "CONSUMABLERATE" VARCHAR(20 OCTETS) ,
		  "MINQUANTITY" VARCHAR(20 OCTETS) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP(0) ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECIMAL(2,0) NOT NULL ,
		  "YEAR" DECIMAL(4,0) NOT NULL ,
		  "FLAG1" VARCHAR(2 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "PHONE" VARCHAR(30 OCTETS) ,
		  "EMAIL" VARCHAR(30 OCTETS) ,
		  "DIVISION" VARCHAR(20 OCTETS) ,
		  "CITY" VARCHAR(50 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(50 OCTETS) ,
		  "TRNO" VARCHAR(20 OCTETS) ,
		  "EFFECTED_FROM" TIMESTAMP(0) ,
		  "EFFECTEDTO" TIMESTAMP(0) ,
		  "PHASE" VARCHAR(30 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

COMMENT ON COLUMN "COMMON_USER"."STR_ITEMLIST"."SUBCATEGORYID" IS 'PARENT' ;

CREATE INDEX "COMMON_USER"."IX165_STR_ITEMLIST" ON "COMMON_USER"."STR_ITEMLIST"
		("CHECK_CONDITION" ASC)

		COMPRESS NO
		INCLUDE NULL KEYS ALLOW REVERSE SCANS ;
ALTER TABLE "COMMON_USER"."STR_ITEMLIST"
	ADD CONSTRAINT "STR_ITEMLIST_PK" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."STR_ITEMLIST" FOR TABLE "COMMON_USER"."STR_ITEMLIST" ;

GRANT SELECT ON TABLE "COMMON_USER"."STR_ITEMLIST" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."STR_ITEMLIST" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."STR_ITEMLIST" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."STR_ITEMLIST" TO USER "DB2INST1"  ;


-- COMMON_USER.SUBSTATION_TYPE_M definition

CREATE TABLE "COMMON_USER"."SUBSTATION_TYPE_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "TYPE" VARCHAR(30 OCTETS) NOT NULL ,
		  "PARENTTYPE_ID" VARCHAR(35 OCTETS) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) NOT NULL ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) NOT NULL ,
		  "MONTH" DECFLOAT(16) NOT NULL ,
		  "YEAR" DECFLOAT(16) NOT NULL ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(35 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) )
		 IN "TBS_EAS"
		 ORGANIZE BY ROW  ;

ALTER TABLE "COMMON_USER"."SUBSTATION_TYPE_M" PCTFREE 0 ;

COMMENT ON TABLE "COMMON_USER"."SUBSTATION_TYPE_M" IS 'Contains Substation Type Master Details' ;
ALTER TABLE "COMMON_USER"."SUBSTATION_TYPE_M"
	ADD CONSTRAINT "PK_SUBSTATION_TYPE_M" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."SUBSTATION_TYPE_M" FOR TABLE "COMMON_USER"."SUBSTATION_TYPE_M" ;

GRANT SELECT ON TABLE "COMMON_USER"."SUBSTATION_TYPE_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."SUBSTATION_TYPE_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."SUBSTATION_TYPE_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."SUBSTATION_TYPE_M" TO USER "DB2INST1"  ;


-- COMMON_USER.WIRE_DETAILS_M definition

CREATE TABLE "COMMON_USER"."WIRE_DETAILS_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "TYPE_OF_WIRE" VARCHAR(15 OCTETS) NOT NULL ,
		  "WIRE_SIZE" DECIMAL(10,0) NOT NULL ,
		  "CREATED_BY" VARCHAR(15 OCTETS) NOT NULL ,
		  "CREATE_DATE" TIMESTAMP(0) NOT NULL ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP(0) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "CHECK_CONDITION" VARCHAR(200 OCTETS) NOT NULL ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;
ALTER TABLE "COMMON_USER"."WIRE_DETAILS_M"
	ADD CONSTRAINT "WIRE_DETAILS_M_PK" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."WIRE_DETAILS_M"
	ADD CONSTRAINT "UK_WIRE_DETAILS_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."WIRE_DETAILS_M" FOR TABLE "COMMON_USER"."WIRE_DETAILS_M" ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRIN_WIRE_DETAILS_M"
  NO CASCADE BEFORE INSERT
  ON "COMMON_USER"."WIRE_DETAILS_M"
  REFERENCING
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.TYPE_OF_WIRE;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;
CREATE TRIGGER "COMMON_USER"."TRIG_BRUP_WIRE_DETAILS_M"
  NO CASCADE BEFORE UPDATE
  ON "COMMON_USER"."WIRE_DETAILS_M"
  REFERENCING
              OLD AS "OLD"
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC

	DECLARE CNT INTEGER;--

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.TYPE_OF_WIRE;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."WIRE_DETAILS_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."WIRE_DETAILS_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."WIRE_DETAILS_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."WIRE_DETAILS_M" TO USER "DB2INST1"  ;


-- COMMON_USER.LTBILL_PROCESS_SCHEDULE_T definition

CREATE TABLE "COMMON_USER"."LTBILL_PROCESS_SCHEDULE_T"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "PROCCODE" VARCHAR(20 OCTETS) ,
		  "CYCLE_YEAR" VARCHAR(4 OCTETS) ,
		  "CYCLE" VARCHAR(2 OCTETS) ,
		  "BILL_PARA" VARCHAR(35 OCTETS) ,
		  "STATUS" VARCHAR(20 OCTETS) ,
		  "CREATED_BY" VARCHAR(15 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP ,
		  "UPDATED_BY" VARCHAR(15 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "MODULE_ID" VARCHAR(15 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(15 OCTETS) ,
		  "DB_IP_ADDRESS" VARCHAR(20 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(50 OCTETS) ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MONTH" DECIMAL(2,0) ,
		  "YEAR" DECIMAL(4,0) ,
		  "ZONE_ID" VARCHAR(10 OCTETS) ,
		  "PROVIENCE" VARCHAR(5 OCTETS) ,
		  "OFFICE_ID" VARCHAR(10 OCTETS) ,
		  "FROM_DAY" VARCHAR(10 OCTETS) ,
		  "TO_DAY" VARCHAR(10 OCTETS) ,
		  "FROM_TIME" VARCHAR(10 OCTETS) ,
		  "TO_TIME" VARCHAR(10 OCTETS) ,
		  "LOCALE_ID" VARCHAR(10 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

ALTER TABLE "COMMON_USER"."LTBILL_PROCESS_SCHEDULE_T" PCTFREE 0 ;
ALTER TABLE "COMMON_USER"."LTBILL_PROCESS_SCHEDULE_T"
	ADD CONSTRAINT "PK_LTBILL_PROCESS_SCHEDULE_T" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."LTBILL_PROCESS_SCHEDULE_T" FOR TABLE "COMMON_USER"."LTBILL_PROCESS_SCHEDULE_T" ;
CREATE ALIAS "DABS    "."LTBILL_PROCESS_SCHEDULE_T" FOR TABLE "COMMON_USER"."LTBILL_PROCESS_SCHEDULE_T" ;

ALTER TABLE "COMMON_USER"."LTBILL_PROCESS_SCHEDULE_T"
	ADD CONSTRAINT "FK_LTBILL_PROCESS_SCHEDULE_T" FOREIGN KEY
		("PROCCODE")
	REFERENCES "COMMON_USER"."CMTPROCESS_CONFIG_M"
		("PROC_CODE")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION ;

GRANT SELECT ON TABLE "COMMON_USER"."LTBILL_PROCESS_SCHEDULE_T" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."LTBILL_PROCESS_SCHEDULE_T" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."LTBILL_PROCESS_SCHEDULE_T" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."LTBILL_PROCESS_SCHEDULE_T" TO USER "DB2INST1"  ;


-- COMMON_USER.MTR_SPECIFICATION definition

CREATE TABLE "COMMON_USER"."MTR_SPECIFICATION"  (
		  "ID" VARCHAR(15 OCTETS) NOT NULL ,
		  "MTRTYPE_ID" VARCHAR(15 OCTETS) NOT NULL ,
		  "SPECIFICATION" VARCHAR(250 OCTETS) NOT NULL ,
		  "DESCRIPTION" VARCHAR(500 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(25 OCTETS) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) NOT NULL ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(15 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) NOT NULL ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "MONTH" DECIMAL(2,0) NOT NULL ,
		  "YEAR" DECIMAL(4,0) NOT NULL ,
		  "FLAG1" VARCHAR(4 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(15 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(15 OCTETS) ,
		  "NAME" VARCHAR(20 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;
ALTER TABLE "COMMON_USER"."MTR_SPECIFICATION"
	ADD CONSTRAINT "MTRSPEC_PK" PRIMARY KEY
		("ID") ;
CREATE ALIAS "CENTRAL_ALL"."MTR_SPECIFICATION" FOR TABLE "COMMON_USER"."MTR_SPECIFICATION" ;

ALTER TABLE "COMMON_USER"."MTR_SPECIFICATION"
	ADD CONSTRAINT "MTPSPEC_FK1" FOREIGN KEY
		("MTRTYPE_ID")
	REFERENCES "COMMON_USER"."MTR_TYPEM"
		("ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION ;

GRANT SELECT ON TABLE "COMMON_USER"."MTR_SPECIFICATION" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."MTR_SPECIFICATION" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."MTR_SPECIFICATION" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."MTR_SPECIFICATION" TO USER "DB2INST1"  ;


-- COMMON_USER.NCTUNIT_M definition

CREATE TABLE "COMMON_USER"."NCTUNIT_M"  (
		  "ID" VARCHAR(40 OCTETS) NOT NULL ,
		  "RATING_VALUE" DECIMAL(15,0) ,
		  "UNIT" VARCHAR(15 OCTETS) ,
		  "UNITS_CONSUMED" DECIMAL(15,3) ,
		  "APPLIANCE_ID" VARCHAR(50 OCTETS) ,
		  "CONVERSION_FACTOR" DECIMAL(15,3) ,
		  "CREATED_BY" VARCHAR(20 OCTETS) ,
		  "CREATE_DATE" TIMESTAMP ,
		  "UPDATED_BY" VARCHAR(20 OCTETS) ,
		  "UPDATE_DATE" TIMESTAMP ,
		  "DB_IP_ADDRESS" VARCHAR(25 OCTETS) ,
		  "SOURCE_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "TARGET_OFFICE_ID" VARCHAR(20 OCTETS) ,
		  "RECORD_STATUS" VARCHAR(10 OCTETS) ,
		  "SCREEN_ID" VARCHAR(30 OCTETS) ,
		  "MONTH" DECFLOAT(16) ,
		  "YEAR" DECFLOAT(16) ,
		  "FLAG1" VARCHAR(1 OCTETS) ,
		  "FLAG2" VARCHAR(1 OCTETS) ,
		  "FLAG3" VARCHAR(1 OCTETS) ,
		  "FLAG4" VARCHAR(1 OCTETS) ,
		  "FLAG5" VARCHAR(1 OCTETS) ,
		  "MODULE_ID" VARCHAR(20 OCTETS) ,
		  "SUBMODULE_ID" VARCHAR(20 OCTETS) ,
		  "CHECK_CONDITION" VARCHAR(70 OCTETS) NOT NULL ,
		  "VOLT_DESC" VARCHAR(20 OCTETS) )
		 IN "TS8"
		 ORGANIZE BY ROW  ;

ALTER TABLE "COMMON_USER"."NCTUNIT_M" PCTFREE 0 ;

COMMENT ON COLUMN "COMMON_USER"."NCTUNIT_M"."ID" IS 'Unique Id acts as primary key' ;
ALTER TABLE "COMMON_USER"."NCTUNIT_M"
	ADD CONSTRAINT "PK_NCTUNIT_M" PRIMARY KEY
		("ID") ;

ALTER TABLE "COMMON_USER"."NCTUNIT_M"
	ADD CONSTRAINT "UK_NCTUNIT_M" UNIQUE
		("CHECK_CONDITION") ;
CREATE ALIAS "CENTRAL_ALL"."NCTUNIT_M" FOR TABLE "COMMON_USER"."NCTUNIT_M" ;

ALTER TABLE "COMMON_USER"."NCTUNIT_M"
	ADD CONSTRAINT "FK388_NCTUNIT_M" FOREIGN KEY
		("APPLIANCE_ID")
	REFERENCES "COMMON_USER"."NCTAPPLIANCE_M"
		("ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION ;
CREATE  TRIGGER COMMON_USER.TRIG_BRIN_NCTUNIT_M
  NO CASCADE BEFORE INSERT
  ON COMMON_USER.NCTUNIT_M
  REFERENCING
    NEW AS NEW
  FOR EACH ROW
BEGIN ATOMIC

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.APPLIANCE_ID||','||NEW.VOLT_DESC;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;
CREATE  TRIGGER COMMON_USER.TRIG_BRUP_NCTUNIT_M
  NO CASCADE BEFORE UPDATE
  ON COMMON_USER.NCTUNIT_M
  REFERENCING
    OLD AS OLD
    NEW AS NEW
  FOR EACH ROW
BEGIN ATOMIC

	DECLARE CNT INTEGER;--

	IF (NEW.RECORD_STATUS='ACTIVE') THEN

		SET NEW.CHECK_CONDITION = NEW.APPLIANCE_ID||','||NEW.VOLT_DESC;--

	ELSE

		SET NEW.CHECK_CONDITION = NEW.ID;--

	END IF;--

END ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTUNIT_M" TO ROLE "ROLE_READ_ONLY"  ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTUNIT_M" TO USER "ETLUSER "  ;

GRANT SELECT ON TABLE "COMMON_USER"."NCTUNIT_M" TO USER "ZAFAR   "  ;

GRANT CONTROL ON TABLE "COMMON_USER"."NCTUNIT_M" TO USER "DB2INST1"  ;