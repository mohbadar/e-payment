spring.profiles.active=test

spring.application.name=epayment-v1

server.port=8010
server.address=localhost


#logging.config=src/main/resources/log4j2.xml


spring.main.allow-bean-definition-overriding=true
# Revision Default Schema
spring.jpa.properties.org.hibernate.envers.default_schema=revision
spring.jpa.properties.org.hibernate.envers.enabled= false

#Metrics related configurations
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.export.graphite.step=1s



#CORS Config
# Can be set to false to disable security during local development
rest.security.enabled=true
rest.security.api-matcher=/api/**
rest.security.cors.allowed-origins=*
rest.security.cors.allowed-headers=*
rest.security.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
rest.security.cors.max-age=3600

rest.security.issuer-uri=http://localhost:8080/auth/realms/epayment
#security.oauth2.resource.id=employee-service
#security.oauth2.resource.token-info-uri=${rest.security.issuer-uri}/protocol/openid-connect/token/introspect
#security.oauth2.resource.user-info-uri=${rest.security.issuer-uri}/protocol/openid-connect/userinfo
#security.oauth2.resource.jwt.key-value=-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4tW2IZn+axOw4ByqBGc4yWLcOUBBDiapKddgXdK5MWHpA8yqgmXsxXzwUHFIVTaCY9JvxpYyCkbaPA64nML1oHGxZ10qWzAyYSqFYnZGhZo6P83LDHqqB8Vuqbr5ZjU7EpUKv4+cWi1zE3D5WDsRfhkv+sLIGbd61OhFT7YBA5kBZe1zx8siP7YF6soiZZUAbcGMnN6idxsJr88ClAAiRiK0805U4nbmOUzsltXHsbMnS5Sl8AIFbjW0Sx0VluVQaraVvZj9VGbc634cVzNc7zErVYxfaFkdwd+iHqhEO0aqi7/fFlJE32Ou8DzWO1WIiteIRrBWi+g+aZlaCnLw0QIDAQAB\n-----END PUBLIC KEY-----

# To access another secured micro-service
#security.oauth2.client.client-id=employee-service
#security.oauth2.client.client-secret=25c33006-e1b9-4fc2-a6b9-c43dbc41ecd0
security.oauth2.client.user-authorization-uri=${rest.security.issuer-uri}/protocol/openid-connect/auth
security.oauth2.client.access-token-uri=${rest.security.issuer-uri}/protocol/openid-connect/token
security.oauth2.client.scope=openid
security.oauth2.client.grant-type=client_credentials

# Keycloak Configuration
keycloak.auth-server-url=http://localhost:8080/auth
keycloak.realm=epayment
keycloak.resource=epayment-app
keycloak.public-client=true
keycloak.bearer-only = true
#keycloak.cors = true
keycloak.enabled = true
#keycloak.ssl-required=external
#keycloak.confidential-port=0
keycloak.use-resource-role-mappings=true
keycloak.ssl-required=external
keycloak.principal-attribute=preferred_username
admin.user=ebreshna
admin.password=secret

#keycloak.security-constraints[0].authRoles[0]=user
#keycloak.security-constraints[0].authRoles[1]=admin
#keycloak.security-constraints[0].securityCollections[0].methods[0]=GET
#keycloak.security-constraints[0].securityCollections[0].methods[1]=POST
#keycloak.security-constraints[0].securityCollections[0].methods[2]=PUT
#keycloak.security-constraints[0].securityCollections[0].methods[3]=DELETE
#keycloak.security-constraints[0].securityCollections[0].patterns[0]=/api/*


### Installation Config
anar.reg.client.url=https://anar.io/release-libs
anar.reg.env=qa
anar.reg.version=1.0.0
anar.reg.mdm.server.port=8080
anar.reg.logpath=../logs
anar.reg.packetstorepath=../PacketStore
anar.reg.healthcheck.url=https\://qa.anar.io/v1/authmanager/actuator/health
anar.reg.rollback.path=../BackUp
anar.reg.db.key=bW9zaXAxMjM0NQ\=\=
anar.reg.cerpath=/cer//anar_cer.cer
anar.reg.xml.file.url=https\://devops.anar.io/artifactory/libs-release/io/anar/registration/registration-client/maven-metadata.xml
anar.reg.dbpath=db/reg
anar.reg.app.key=bBQX230Wskq6XpoZ1c+Ep1D+znxfT89NxLQ7P4KFkc4\=
anar.reg.client.tpm.availability=N





spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext



## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://localhost:5432/epayment_test
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username= epayment_user
spring.datasource.password= secret

## serialization of lazyloaded relationship causes to error when objects not loaded
spring.jackson.serialization.fail-on-empty-beans=false

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL82Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update


spring.jpa.show-sql=true

# logging
# logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
# logging.level.org.hibernate.SQL=info
# logging.level.org.springframework.web.=info
# logging.level.org.springframework.security=info

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


# Kafka Connect Host
kafka.connect.host=http://localhost:8083
#Kafka Rest Host
kafka.rest.host=http://localhost:9092
#Schema URL
kafka.schema.url=http://localhost:8081
tpd.topic-name=default-topic


#---------------- Notification Service ------------------------------------------------
spring.devtools.restart.enabled=true

# Mail Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=badar.hashimi.dev@gmail.com
spring.mail.password=badar
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout = 60000
spring.mail.properties.mail.smtp.timeout = 60000
spring.mail.properties.mail.smtp.writetimeout=5000

spring.mail.logging.enabled=true

spring.mail.logging.strategy.from=PLAIN_TEXT
spring.mail.logging.strategy.replyTo=HIDDEN
spring.mail.logging.strategy.to=FULL_TEXT_FROM_COMMERCIAL_AT,
spring.mail.logging.strategy.cc=HIDDEN
spring.mail.logging.strategy.bcc=HIDDEN
spring.mail.logging.strategy.subject=PLAIN_TEXT
spring.mail.logging.strategy.body=FIRST_DOZEN_THEN_STARS
spring.mail.logging.strategy.attachments=HIDDEN
spring.mail.logging.strategy.encoding=HIDDEN
spring.mail.logging.strategy.locale=HIDDEN
spring.mail.logging.strategy.sentAt=STANDARD_DATE_FORMAT_WITH_ZONE_ID
spring.mail.logging.strategy.receiptTo=HIDDEN
spring.mail.logging.strategy.depositionNotificationTo=HIDDEN
spring.mail.logging.strategy.ignore.customHeaders=true
spring.mail.logging.strategy.ignore.nullAndEmptyCollections=true

# Slack Configuration
slack.access.token=<slack.api.auth.token>
slack.channel.name=<slack.channel>  


# --------------------------- Internationalization --------------------------
# Whether to always apply the MessageFormat rules, parsing even messages without arguments.
spring.messages.always-use-message-format=false

# Comma-separated list of basenames
spring.messages.basename=classpath:messages/messages

# Loaded resource bundle files cache duration.
# When not set, bundles are cached forever.
# If a duration suffix is not specified, seconds will be used.
spring.messages.cache-duration=

# Message bundles encoding.
spring.messages.encoding=UTF-8

# Whether to fall back to the system Locale
# if no files for a specific Locale have been found.
spring.messages.fallback-to-system-locale=true

# Whether to use the message code as the default message instead of throwing a "NoSuchMessageException".
# Recommended during development only.
spring.messages.use-code-as-default-message=false